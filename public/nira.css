/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-sky-400: oklch(74.6% 0.16 232.661);
    --color-sky-800: oklch(44.3% 0.11 240.79);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-900: oklch(40.8% 0.153 2.432);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-stone-500: oklch(55.3% 0.013 58.071);
    --color-stone-600: oklch(44.4% 0.011 73.639);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-xl: 80rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --radius-4xl: 2rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-xs: 4px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-3xl: 64px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: "Geist", sans-serif, system-ui, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: inset(50%);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-1\/4 {
    top: calc(1/4 * 100%);
  }
  .top-2\/4 {
    top: calc(2/4 * 100%);
  }
  .top-3\/4 {
    top: calc(3/4 * 100%);
  }
  .top-8 {
    top: calc(var(--spacing) * 8);
  }
  .top-16 {
    top: calc(var(--spacing) * 16);
  }
  .top-28 {
    top: calc(var(--spacing) * 28);
  }
  .top-32 {
    top: calc(var(--spacing) * 32);
  }
  .top-50 {
    top: calc(var(--spacing) * 50);
  }
  .top-60 {
    top: calc(var(--spacing) * 60);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-8 {
    right: calc(var(--spacing) * 8);
  }
  .right-10 {
    right: calc(var(--spacing) * 10);
  }
  .right-25 {
    right: calc(var(--spacing) * 25);
  }
  .right-50 {
    right: calc(var(--spacing) * 50);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-29 {
    bottom: calc(var(--spacing) * 29);
  }
  .bottom-60 {
    bottom: calc(var(--spacing) * 60);
  }
  .-left-1 {
    left: calc(var(--spacing) * -1);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-3 {
    left: calc(var(--spacing) * 3);
  }
  .left-8 {
    left: calc(var(--spacing) * 8);
  }
  .left-10 {
    left: calc(var(--spacing) * 10);
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .z-2 {
    z-index: 2;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .z-200 {
    z-index: 200;
  }
  .col-auto {
    grid-column: auto;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-span-4 {
    grid-column: span 4 / span 4;
  }
  .col-span-12 {
    grid-column: span 12 / span 12;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-5 {
    margin: calc(var(--spacing) * 5);
  }
  .-mx-5 {
    margin-inline: calc(var(--spacing) * -5);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .\!my-4 {
    margin-block: calc(var(--spacing) * 4) !important;
  }
  .\!my-5 {
    margin-block: calc(var(--spacing) * 5) !important;
  }
  .-my-2 {
    margin-block: calc(var(--spacing) * -2);
  }
  .my-0 {
    margin-block: calc(var(--spacing) * 0);
  }
  .my-0\.5 {
    margin-block: calc(var(--spacing) * 0.5);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .me-3 {
    margin-inline-end: calc(var(--spacing) * 3);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-14 {
    margin-top: calc(var(--spacing) * 14);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-6 {
    margin-right: calc(var(--spacing) * 6);
  }
  .\!mb-2 {
    margin-bottom: calc(var(--spacing) * 2) !important;
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-14 {
    margin-bottom: calc(var(--spacing) * 14);
  }
  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-9\.5 {
    width: calc(var(--spacing) * 9.5);
    height: calc(var(--spacing) * 9.5);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .size-11 {
    width: calc(var(--spacing) * 11);
    height: calc(var(--spacing) * 11);
  }
  .size-15\.5 {
    width: calc(var(--spacing) * 15.5);
    height: calc(var(--spacing) * 15.5);
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-40 {
    height: calc(var(--spacing) * 40);
  }
  .h-44 {
    height: calc(var(--spacing) * 44);
  }
  .h-64 {
    height: calc(var(--spacing) * 64);
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-\[1\.1rem\] {
    height: 1.1rem;
  }
  .h-\[1rem\] {
    height: 1rem;
  }
  .h-\[94\.5vh\] {
    height: 94.5vh;
  }
  .h-\[400px\] {
    height: 400px;
  }
  .h-\[500px\] {
    height: 500px;
  }
  .h-\[650px\] {
    height: 650px;
  }
  .h-auto {
    height: auto;
  }
  .h-fit {
    height: fit-content;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }
  .min-h-\[20rem\] {
    min-height: 20rem;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-28 {
    width: calc(var(--spacing) * 28);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-52 {
    width: calc(var(--spacing) * 52);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-\[1\.1rem\] {
    width: 1.1rem;
  }
  .w-\[1rem\] {
    width: 1rem;
  }
  .w-\[250px\] {
    width: 250px;
  }
  .w-\[280px\] {
    width: 280px;
  }
  .w-\[400px\] {
    width: 400px;
  }
  .w-\[500px\] {
    width: 500px;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-px {
    width: 1px;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-\[18rem\] {
    max-width: 18rem;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-\[230px\] {
    min-width: 230px;
  }
  .min-w-fit {
    min-width: fit-content;
  }
  .flex-1 {
    flex: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-bounce {
    animation: var(--animate-bounce);
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .list-decimal {
    list-style-type: decimal;
  }
  .list-disc {
    list-style-type: disc;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-content-center {
    place-content: center;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-6 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .self-start {
    align-self: flex-start;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-\[inherit\] {
    border-radius: inherit;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-none {
    border-radius: 0;
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-base-200 {
    border-color: var(--color-base-200);
  }
  .border-base-300 {
    border-color: var(--color-base-300);
  }
  .border-base-300\/40 {
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
    }
  }
  .border-base-300\/47 {
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
  }
  .border-base-content\/5 {
    border-color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
    }
  }
  .border-danger {
    border-color: var(--color-danger);
  }
  .border-pink-400 {
    border-color: var(--color-pink-400);
  }
  .border-pink-600 {
    border-color: var(--color-pink-600);
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-secondary {
    border-color: var(--color-secondary);
  }
  .border-stone-500 {
    border-color: var(--color-stone-500);
  }
  .border-success {
    border-color: var(--color-success);
  }
  .border-warning {
    border-color: var(--color-warning);
  }
  .\!bg-base-100 {
    background-color: var(--color-base-100) !important;
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-base-100\/70 {
    background-color: var(--color-base-100);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-100) 70%, transparent);
    }
  }
  .bg-base-200 {
    background-color: var(--color-base-200);
  }
  .bg-base-200\/10 {
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 10%, transparent);
    }
  }
  .bg-base-200\/20 {
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 20%, transparent);
    }
  }
  .bg-base-200\/30 {
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 30%, transparent);
    }
  }
  .bg-base-200\/40 {
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
    }
  }
  .bg-base-200\/60 {
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 60%, transparent);
    }
  }
  .bg-base-200\/70 {
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 70%, transparent);
    }
  }
  .bg-base-300 {
    background-color: var(--color-base-300);
  }
  .bg-base-400 {
    background-color: var(--color-base-400);
  }
  .bg-base-content {
    background-color: var(--color-base-content);
  }
  .bg-danger {
    background-color: var(--color-danger);
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-pink-400\/10 {
    background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-pink-400) 10%, transparent);
    }
  }
  .bg-pink-500 {
    background-color: var(--color-pink-500);
  }
  .bg-pink-500\! {
    background-color: var(--color-pink-500) !important;
  }
  .bg-pink-600 {
    background-color: var(--color-pink-600);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-secondary {
    background-color: var(--color-secondary);
  }
  .bg-sky-800 {
    background-color: var(--color-sky-800);
  }
  .bg-success {
    background-color: var(--color-success);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-warning {
    background-color: var(--color-warning);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-base-100 {
    --tw-gradient-from: var(--color-base-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-gray-900 {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary\/30 {
    --tw-gradient-from: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-primary) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-base-100\/80 {
    --tw-gradient-via: var(--color-base-100);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-base-100) 80%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-base-200\/40 {
    --tw-gradient-via: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-base-200) 40%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-gray-800 {
    --tw-gradient-via: var(--color-gray-800);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-secondary\/2 {
    --tw-gradient-via: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-secondary) 2%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-base-100 {
    --tw-gradient-to: var(--color-base-100);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-base-200\/40 {
    --tw-gradient-to: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-base-200) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-base-200\/50 {
    --tw-gradient-to: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-base-200) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-black {
    --tw-gradient-to: var(--color-black);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-primary {
    fill: var(--color-primary);
  }
  .stroke-current {
    stroke: currentcolor;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-7 {
    padding: calc(var(--spacing) * 7);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .px-16 {
    padding-inline: calc(var(--spacing) * 16);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .ps-\[1\.4rem\] {
    padding-inline-start: 1.4rem;
  }
  .pt-0\.5 {
    padding-top: calc(var(--spacing) * 0.5);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pb-10 {
    padding-bottom: calc(var(--spacing) * 10);
  }
  .pl-0 {
    padding-left: calc(var(--spacing) * 0);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .text-start {
    text-align: start;
  }
  .align-middle {
    vertical-align: middle;
  }
  .align-super {
    vertical-align: super;
  }
  .font-sans {
    font-family: "Geist", sans-serif, system-ui, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-5 {
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }
  .leading-\[0\] {
    --tw-leading: 0;
    line-height: 0;
  }
  .leading-\[1\.5em\] {
    --tw-leading: 1.5em;
    line-height: 1.5em;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .\!font-semibold {
    --tw-font-weight: var(--font-weight-semibold) !important;
    font-weight: var(--font-weight-semibold) !important;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .text-base-100 {
    color: var(--color-base-100);
  }
  .text-base-content {
    color: var(--color-base-content);
  }
  .text-base-content-100 {
    color: var(--color-base-content-100);
  }
  .text-base-content-200 {
    color: var(--color-base-content-200);
  }
  .text-base-content-300 {
    color: var(--color-base-content-300);
  }
  .text-base-content\/50 {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
  }
  .text-base-content\/70 {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
    }
  }
  .text-base-content\/90 {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 90%, transparent);
    }
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-danger {
    color: var(--color-danger);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-pink-900 {
    color: var(--color-pink-900);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-secondary {
    color: var(--color-secondary);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-warning {
    color: var(--color-warning);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-80 {
    opacity: 80%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-2xs {
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-pink-400 {
    --tw-shadow-color: oklch(71.8% 0.202 349.761);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-pink-400) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-base-300\/47 {
    --tw-ring-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
  }
  .ring-base-400\/80 {
    --tw-ring-color: var(--color-base-400);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-base-400) 80%, transparent);
    }
  }
  .ring-danger {
    --tw-ring-color: var(--color-danger);
  }
  .ring-primary {
    --tw-ring-color: var(--color-primary);
  }
  .ring-secondary {
    --tw-ring-color: var(--color-secondary);
  }
  .ring-success {
    --tw-ring-color: var(--color-success);
  }
  .ring-warning {
    --tw-ring-color: var(--color-warning);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[color\,box-shadow\] {
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-150 {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .will-change-auto {
    will-change: auto;
  }
  .will-change-transform {
    will-change: transform;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .peer-checked\:translate-x-0 {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .file\:border {
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .file\:border-danger {
    &::file-selector-button {
      border-color: var(--color-danger);
    }
  }
  .file\:border-primary {
    &::file-selector-button {
      border-color: var(--color-primary);
    }
  }
  .file\:border-secondary {
    &::file-selector-button {
      border-color: var(--color-secondary);
    }
  }
  .file\:border-success {
    &::file-selector-button {
      border-color: var(--color-success);
    }
  }
  .file\:border-warning {
    &::file-selector-button {
      border-color: var(--color-warning);
    }
  }
  .file\:bg-danger {
    &::file-selector-button {
      background-color: var(--color-danger);
    }
  }
  .file\:bg-primary {
    &::file-selector-button {
      background-color: var(--color-primary);
    }
  }
  .file\:bg-secondary {
    &::file-selector-button {
      background-color: var(--color-secondary);
    }
  }
  .file\:bg-stone-600 {
    &::file-selector-button {
      background-color: var(--color-stone-600);
    }
  }
  .file\:bg-success {
    &::file-selector-button {
      background-color: var(--color-success);
    }
  }
  .file\:bg-warning {
    &::file-selector-button {
      background-color: var(--color-warning);
    }
  }
  .file\:text-white {
    &::file-selector-button {
      color: var(--color-white);
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-1\.5 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:bg-base-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
      }
    }
  }
  .hover\:bg-base-200\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-200) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-base-200\/40 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
        }
      }
    }
  }
  .hover\:bg-sky-900 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-900);
      }
    }
  }
  .focus\:bg-base-200\/40 {
    &:focus {
      background-color: var(--color-base-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
      }
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus-visible\:ring-\[3px\] {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-ring\/50 {
    &:focus-visible {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }
  .focus-visible\:outline-1 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus-visible\:outline-2 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
  }
  .focus-visible\:outline-offset-2 {
    &:focus-visible {
      outline-offset: 2px;
    }
  }
  .focus-visible\:outline-pink-600 {
    &:focus-visible {
      outline-color: var(--color-pink-600);
    }
  }
  .active\:scale-\[\.98\] {
    &:active {
      scale: .98;
    }
  }
  .active\:scale-\[0\.98\] {
    &:active {
      scale: 0.98;
    }
  }
  .active\:border-base-300\/47 {
    &:active {
      border-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
      }
    }
  }
  .active\:bg-base-200\/40 {
    &:active {
      background-color: var(--color-base-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
      }
    }
  }
  .disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .disabled\:select-none {
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .motion-reduce\:\[scale\:1\]\! {
    @media (prefers-reduced-motion: reduce) {
      scale: 1 !important;
    }
  }
  .motion-reduce\:opacity-100\! {
    @media (prefers-reduced-motion: reduce) {
      opacity: 100% !important;
    }
  }
  .motion-reduce\:filter-none\! {
    @media (prefers-reduced-motion: reduce) {
      filter: none !important;
    }
  }
  .max-sm\:fixed {
    @media (width < 40rem) {
      position: fixed;
    }
  }
  .max-sm\:-translate-x-full {
    @media (width < 40rem) {
      --tw-translate-x: -100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:col-span-4 {
    @media (width >= 40rem) {
      grid-column: span 4 / span 4;
    }
  }
  .sm\:col-span-6 {
    @media (width >= 40rem) {
      grid-column: span 6 / span 6;
    }
  }
  .sm\:ml-0 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 0);
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:w-full {
    @media (width >= 40rem) {
      width: 100%;
    }
  }
  .sm\:max-w-\[18rem\] {
    @media (width >= 40rem) {
      max-width: 18rem;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:justify-between {
    @media (width >= 40rem) {
      justify-content: space-between;
    }
  }
  .sm\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .sm\:gap-0 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 0);
    }
  }
  .sm\:gap-2\.5 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 2.5);
    }
  }
  .sm\:gap-10 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .sm\:overflow-x-hidden {
    @media (width >= 40rem) {
      overflow-x: hidden;
    }
  }
  .sm\:p-3 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .sm\:p-20 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 20);
    }
  }
  .sm\:px-4 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-8 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .sm\:py-0 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 0);
    }
  }
  .sm\:py-7 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 7);
    }
  }
  .sm\:pl-\[6rem\] {
    @media (width >= 40rem) {
      padding-left: 6rem;
    }
  }
  .sm\:pl-\[9rem\] {
    @media (width >= 40rem) {
      padding-left: 9rem;
    }
  }
  .sm\:text-7xl {
    @media (width >= 40rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:max-w-lg {
    @media (width >= 48rem) {
      max-width: var(--container-lg);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:gap-2 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 2);
    }
  }
  .md\:gap-10 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .md\:p-5 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 5);
    }
  }
  .md\:px-4 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .md\:pl-2 {
    @media (width >= 48rem) {
      padding-left: calc(var(--spacing) * 2);
    }
  }
  .md\:pl-\[6\.5rem\] {
    @media (width >= 48rem) {
      padding-left: 6.5rem;
    }
  }
  .md\:text-4xl {
    @media (width >= 48rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-6xl {
    @media (width >= 48rem) {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  .lg\:mx-0 {
    @media (width >= 64rem) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:items-start {
    @media (width >= 64rem) {
      align-items: flex-start;
    }
  }
  .lg\:justify-end {
    @media (width >= 64rem) {
      justify-content: flex-end;
    }
  }
  .lg\:justify-start {
    @media (width >= 64rem) {
      justify-content: flex-start;
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:pl-0 {
    @media (width >= 64rem) {
      padding-left: calc(var(--spacing) * 0);
    }
  }
  .lg\:text-left {
    @media (width >= 64rem) {
      text-align: left;
    }
  }
  .xl\:block {
    @media (width >= 80rem) {
      display: block;
    }
  }
  .xl\:flex {
    @media (width >= 80rem) {
      display: flex;
    }
  }
  .xl\:max-w-none {
    @media (width >= 80rem) {
      max-width: none;
    }
  }
  .xl\:grid-cols-3 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .xl\:grid-cols-4 {
    @media (width >= 80rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .xl\:flex-col {
    @media (width >= 80rem) {
      flex-direction: column;
    }
  }
  .xl\:px-6 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .xl\:pt-0 {
    @media (width >= 80rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
}
:root {
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --radius: 0.625rem;
  --docsearch-hit-highlight-color: var(--color-base-300);
}
@layer base {
  * {
    outline-color: var(--ring);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }
}
@layer utilities {
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
}
.highlight {
  border-radius: var(--radius-2xl);
  background-color: var(--color-base-200);
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
  --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  color: var(--color-base-content);
  position: relative;
}
.highlight pre {
  background-color: transparent;
  color: currentColor;
  line-height: 1.375;
  margin: 0 !important;
  padding: 1.25em 1.5em;
  white-space: pre;
  word-break: break-word;
  overflow: auto;
  border-radius: var(--radius-2xl);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-base-300);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
  }
}
.bd-copy {
  opacity: 0;
  position: absolute;
  right: .75em;
  top: .75em;
  transition-duration: .295ms;
  transition-property: opacity;
  cursor: pointer;
}
.highlight:hover .bd-copy {
  opacity: 1;
}
html {
  scroll-padding-top: 120px;
  scroll-behavior: smooth;
}
.logo {
  stroke: var(--color-base-100);
  fill: none;
  stroke-width: 1;
}
.logo path {
  stroke-dasharray: 100;
  stroke-dashoffset: 200;
  animation: draw 3s ease-in-out infinite;
}
@keyframes draw {
  to {
    stroke-dashoffset: 0;
  }
}
pre .css-property, pre .css-value, pre .vendor-fix, pre .support.namespace {
  color: var(--color-base-content);
}
pre .tag, pre .tag-name {
  color: var(--color-base-content);
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
  }
}
.typography {
  width: 85vw;
  padding-top: calc(var(--spacing) * 2);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  min-width: 100%;
}
@media (min-width: 40rem) {
  .typography {
    width: 100%;
    margin-inline: auto;
  }
}
.code {
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-base-300);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
  }
  margin: 0px 2px;
  padding: 0px 5px;
  font-size: 12px;
}
@keyframes border-spin {
  100% {
    transform: rotate(-360deg);
  }
}
@keyframes border-spin {
  to {
    transform: rotate(360deg);
  }
}
@layer utilities {
  .card-wrapper {
    position: relative;
    overflow: hidden;
    border-radius: var(--radius-2xl);
    padding: 1px;
    background: transparent;
  }
  .card-wrapper::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    height: 200%;
    width: 200%;
    @media (width >= 40rem) {
      height: 200%;
    }
    @media (width >= 40rem) {
      width: 200%;
    }
    background: conic-gradient( var(--color-primary) 0deg, var(--color-primary) 0deg, transparent 40deg );
    animation: border-spin 4s linear infinite;
    z-index: 0;
  }
  .card-content {
    position: relative;
    z-index: 10;
    border-radius: var(--radius-2xl);
    background-color: var(--color-base-100);
    padding: calc(var(--spacing) * 8);
  }
}
.DocSearch-Button {
  background-color: var(--color-base-100) !important;
  border-color: var(--color-base-300) !important;
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent) !important;
  }
  color: var(--color-base-content) !important;
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 70%, transparent) !important;
  }
}
.DocSearch-Button-Key,.DocSearch-Commands-Key {
  background-color: var(--color-base-200) !important;
  border-color: var(--color-base-300) !important;
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 20%, transparent) !important;
  }
  color: var(--color-base-content) !important;
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 70%, transparent) !important;
  }
}
.DocSearch-Button-Placeholder,.DocSearch-Search-Icon {
  color: var(--color-base-content) !important;
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 70%, transparent) !important;
  }
}
.DocSearch-Modal {
  background-color: var(--color-base-200) !important;
}
.DocSearch-Hit,.DocSearch-Hit-Container {
  color: var(--color-base-content) !important;
}
.DocSearch-Hit a, .DocSearch-Hit--AskAI {
  background-color: var(--color-base-300) !important;
}
.DocSearch-Hit-source {
  background-color: var(--color-base-200) !important;
}
.DocSearch-Form {
  background: var(--color-base-100) !important;
  border-bottom-style: var(--tw-border-style) !important;
  border-bottom-width: 1px !important;
  border-color: var(--color-base-300) !important;
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent) !important;
  }
}
.DocSearch-Footer {
  border-top-style: var(--tw-border-style) !important;
  border-top-width: 1px !important;
  border-color: var(--color-base-300) !important;
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent) !important;
  }
  background-color: var(--color-base-100) !important;
}
.DocSearch-Clear,.DocSearch-AskAi-Return, .DocSearch-Close, .DocSearch-StreamingIndicator,.DocSearch-Label,.DocSearch-Commands,.DocSearch-Input,.DocSearch-Screen-Icon,.DocSearch-Divider {
  color: var(--color-base-content) !important;
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 70%, transparent) !important;
  }
}
.DocSearch-Hit-source {
  color: var(--color-base-content) !important;
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 70%, transparent) !important;
  }
}
.DocSearch-Hit[aria-selected=true] a {
  background-color: var(--color-base-400) !important;
}
.DocSearch-Divider {
  border-left-style: var(--tw-border-style);
  border-left-width: 1px;
  border-color: var(--color-base-300);
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
  }
}
.DocSearch-Hit[aria-selected=true] .DocSearch-Hit-Tree, .DocSearch-Hit[aria-selected=true] .DocSearch-Hit-text, .DocSearch-Hit[aria-selected=true] .DocSearch-Hit-title {
  color: var(--color-base-content) !important;
  @supports (color: color-mix(in lab, red, red)) {
    color: color-mix(in oklab, var(--color-base-content) 70%, transparent) !important;
  }
}
.DocSearch-Hit-path {
  color: var(--color-base-content-200) !important;
}
.DocSearch-Container {
  background-color: var(--color-base-100) !important;
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-base-100) 80%, transparent) !important;
  }
}
.DocSearch-Commands-Key {
  border-style: var(--tw-border-style) !important;
  border-width: 1px !important;
  border-color: var(--color-base-300) !important;
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent) !important;
  }
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}
.cls-1, .cls-2 {
  fill: var(--color-primary) !important;
}
.DocSearch-Input {
  &::placeholder {
    color: var(--color-primary) !important;
  }
}
.DocSearch-Title {
  color: var(--color-primary) !important;
}
.DocSearch-Screen-Icon {
  stroke: none !important;
  color: var(--color-primary) !important;
}
.DocSearch-Hit[aria-selected=true] .DocSearch-Hit--AskAI, .DocSearch-Hit[aria-selected=true] a {
  --docsearch-hit-highlight-color: var(--color-base-400);
  background-color: var(--docsearch-hit-highlight-color) !important;
}
.DocSearch-Hit[aria-selected=true] .DocSearch-Hit-action, .DocSearch-Hit[aria-selected=true] .DocSearch-Hit-icon, .DocSearch-Hit[aria-selected=true] mark {
  --docsearch-highlight-color: var(--color-base-content);
  color: var(--docsearch-highlight-color);
}
.DocSearch-Hit-icon {
  --docsearch-secondary-text-color: var(--color-base-content);
  color: var(--docsearch-secondary-text-color);
}
.DocSearch-Hit mark {
  --docsearch-highlight-color: var(--color-base-content);
  color: var(--docsearch-highlight-color);
}
.DocSearch-Divider {
  border-left-style: var(--tw-border-style) !important;
  border-left-width: 1px !important;
  border-color: var(--color-base-300) !important;
  @supports (color: color-mix(in lab, red, red)) {
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent) !important;
  }
}
.DocSearch-AskAi-Return:hover, .DocSearch-Close:hover, .DocSearch-StreamingIndicator:hover {
  --docsearch-soft-primary-color: var(--color-base-200);
  background: var(--docsearch-soft-primary-color);
}
#docsearch,.DocSearch-Button {
  border-radius: calc(infinity * 1px) !important;
}
.DocSearch-Button-Key {
  border-radius: calc(infinity * 1px) !important;
  background-color: var(--color-base-100) !important;
  font-size: var(--text-sm) !important;
  line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
}
.DocSearch-Modal {
  background-color: var(--color-base-100) !important;
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--color-base-100) 80%, transparent) !important;
  }
}
@layer base {
  :root {
    --color-primary: #2fc6f8;
    --color-secondary: #a835fa;
    --color-success: #02ce57;
    --color-danger: #f51d2f;
    --color-warning: #fabf2b;
    --color-base-content: oklch(21% 0.006 285.885);
    --color-base-content-100: oklch(30% 0.006 285.885);
    --color-base-content-200: oklch(39% 0.006 285.885);
    --color-base-content-300: oklch(48% 0.006 285.885);
    --color-base-100: oklch(100% 0.00011 271.152);
    --color-base-200: oklch(95% 0.00011 271.152);
    --color-base-300: oklch(83% 0.00011 271.152);
    --color-base-400: oklch(80% 0.00011 271.152);
  }
}
@layer base {
  @font-face {
    font-family: Geist;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/geist/v3/gyByhwUxId8gMEwcGFU.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }
}
@layer base {
  @font-face {
    font-family: Inter;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/inter/v20/UcCo3FwrK3iLTcviYwY.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }
}
@layer base {
  @font-face {
    font-family: Noto Sans;
    font-style: normal;
    font-weight: 100 900;
    font-display: swap;
    src: url(https://fonts.gstatic.com/s/notosans/v41/o-0bIpQlx3QUlC5A4PNB6Ryti20_6n1iPHjc5a7duw.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }
}
@layer base {
  [data-theme='light'] {
    --color-primary: #2fc6f8;
    --color-secondary: #a835fa;
    --color-success: #02ce57;
    --color-danger: #f51d2f;
    --color-warning: #fabf2b;
    --color-base-content: oklch(21% 0.006 285.885);
    --color-base-content-100: oklch(30% 0.006 285.885);
    --color-base-content-200: oklch(39% 0.006 285.885);
    --color-base-content-300: oklch(48% 0.006 285.885);
    --color-base-100: oklch(100% 0.00011 271.152);
    --color-base-200: oklch(95% 0.00011 271.152);
    --color-base-300: oklch(83% 0.00011 271.152);
    --color-base-400: oklch(80% 0.00011 271.152);
  }
}
@layer base {
  [data-theme='dark'] {
    --color-primary: #00bcff;
    --color-secondary: #9810fa;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(100% 0.00011 271.152);
    --color-base-content-100: oklch(91% 0.00011 271.152);
    --color-base-content-200: oklch(82% 0.00011 271.152);
    --color-base-content-300: oklch(73% 0.00011 271.152);
    --color-base-100: oklch(15% 0 0);
    --color-base-200: oklch(23% 0 0);
    --color-base-300: oklch(29% 0 0);
    --color-base-400: oklch(35% 0 0);
  }
}
@layer base {
  [data-theme='midnight'] {
    --color-primary: #1e3a8a;
    --color-secondary: #3b82f6;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(90% 0.05 270);
    --color-base-content-100: oklch(81% 0.05 270);
    --color-base-content-200: oklch(72% 0.05 270);
    --color-base-content-300: oklch(63% 0.05 270);
    --color-base-100: oklch(17% 0.05 270);
    --color-base-200: oklch(23% 0.05 270);
    --color-base-300: oklch(29% 0.05 270);
    --color-base-400: oklch(35% 0.05 270);
  }
}
@layer base {
  [data-theme='neon'] {
    --color-primary: #00ff88;
    --color-secondary: #ff00ff;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(92% 0.02 250);
    --color-base-content-100: oklch(83% 0.02 250);
    --color-base-content-200: oklch(74% 0.02 250);
    --color-base-content-300: oklch(65% 0.02 250);
    --color-base-100: oklch(15% 0.22777 152.572);
    --color-base-200: oklch(21% 0.22777 152.572);
    --color-base-300: oklch(27% 0.22777 152.572);
    --color-base-400: oklch(33% 0.22777 152.572);
  }
}
@layer base {
  [data-theme='steel'] {
    --color-primary: #64748b;
    --color-secondary: #475569;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(92% 0.04078 257.446);
    --color-base-content-100: oklch(83% 0.04078 257.446);
    --color-base-content-200: oklch(74% 0.04078 257.446);
    --color-base-content-300: oklch(65% 0.04078 257.446);
    --color-base-100: oklch(14% 0.04078 257.446);
    --color-base-200: oklch(20% 0.04078 257.446);
    --color-base-300: oklch(26% 0.04078 257.446);
    --color-base-400: oklch(32% 0.04078 257.446);
  }
}
@layer base {
  [data-theme='storm'] {
    --color-primary: #1e40af;
    --color-secondary: #4338ca;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(90% 0.18094 265.652);
    --color-base-content-100: oklch(81% 0.18094 265.652);
    --color-base-content-200: oklch(72% 0.18094 265.652);
    --color-base-content-300: oklch(63% 0.18094 265.652);
    --color-base-100: oklch(14% 0.18094 265.652);
    --color-base-200: oklch(20% 0.18094 265.652);
    --color-base-300: oklch(26% 0.18094 265.652);
    --color-base-400: oklch(32% 0.18094 265.652);
  }
}
@layer base {
  [data-theme='forest'] {
    --color-primary: #166534;
    --color-secondary: #22c55e;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(90% 0.10831 151.351);
    --color-base-content-100: oklch(81% 0.10831 151.351);
    --color-base-content-200: oklch(72% 0.10831 151.351);
    --color-base-content-300: oklch(63% 0.10831 151.351);
    --color-base-100: oklch(20% 0.10831 151.351);
    --color-base-200: oklch(26% 0.10831 151.351);
    --color-base-300: oklch(32% 0.10831 151.351);
    --color-base-400: oklch(38% 0.10831 151.351);
  }
}
@layer base {
  [data-theme='sunset'] {
    --color-primary: #f97316;
    --color-secondary: #ea580c;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(20% 0.18669 47.592);
    --color-base-content-100: oklch(34% 0.18669 47.592);
    --color-base-content-200: oklch(52% 0.18669 47.592);
    --color-base-content-300: oklch(70% 0.18669 47.592);
    --color-base-100: oklch(99% 0.18669 47.592);
    --color-base-200: oklch(93% 0.18669 47.592);
    --color-base-300: oklch(87% 0.18669 47.592);
    --color-base-400: oklch(81% 0.18669 47.592);
  }
}
@layer base {
  [data-theme='rose'] {
    --color-primary: #e11d48;
    --color-secondary: #f43f5e;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(20% 0.22205 17.569);
    --color-base-content-100: oklch(29% 0.22205 17.569);
    --color-base-content-200: oklch(38% 0.22205 17.569);
    --color-base-content-300: oklch(47% 0.22205 17.569);
    --color-base-100: oklch(99% 0.22205 17.569);
    --color-base-200: oklch(93% 0.22205 17.569);
    --color-base-300: oklch(87% 0.22205 17.569);
    --color-base-400: oklch(81% 0.22205 17.569);
  }
}
@layer base {
  [data-theme='gold'] {
    --color-primary: #f59e0b;
    --color-secondary: #d97706;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(20% 0.1646 70.075);
    --color-base-content-100: oklch(29% 0.1646 70.075);
    --color-base-content-200: oklch(38% 0.1646 70.075);
    --color-base-content-300: oklch(47% 0.1646 70.075);
    --color-base-100: oklch(99% 0.1646 70.075);
    --color-base-200: oklch(93% 0.1646 70.075);
    --color-base-300: oklch(87% 0.1646 70.075);
    --color-base-400: oklch(81% 0.1646 70.075);
  }
}
@layer base {
  [data-theme='corporate'] {
    --color-primary: #2563eb;
    --color-secondary: #0ea5e9;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(18% 0.02 240);
    --color-base-content-100: oklch(27% 0.02 240);
    --color-base-content-200: oklch(36% 0.02 240);
    --color-base-content-300: oklch(45% 0.02 240);
    --color-base-100: oklch(100% 0.01 240);
    --color-base-200: oklch(94% 0.01 240);
    --color-base-300: oklch(88% 0.01 240);
    --color-base-400: oklch(82% 0.01 240);
  }
}
@layer base {
  [data-theme='retro'] {
    --color-primary: #ef4444;
    --color-secondary: #f97316;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(25% 0.1 40);
    --color-base-content-100: oklch(34% 0.1 40);
    --color-base-content-200: oklch(43% 0.1 40);
    --color-base-content-300: oklch(52% 0.1 40);
    --color-base-100: oklch(95% 0.05 100);
    --color-base-200: oklch(89% 0.05 100);
    --color-base-300: oklch(83% 0.05 100);
    --color-base-400: oklch(77% 0.05 100);
  }
}
@layer base {
  [data-theme='lofi'] {
    --color-primary: #3f3f46;
    --color-secondary: #71717a;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(90% 0.01 240);
    --color-base-content-100: oklch(81% 0.01 240);
    --color-base-content-200: oklch(72% 0.01 240);
    --color-base-content-300: oklch(63% 0.01 240);
    --color-base-100: oklch(15% 0.01 240);
    --color-base-200: oklch(21% 0.01 240);
    --color-base-300: oklch(27% 0.01 240);
    --color-base-400: oklch(33% 0.01 240);
  }
}
@layer base {
  [data-theme='pastel'] {
    --color-primary: #a5b4fc;
    --color-secondary: #f9a8d4;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(20% 0.02 80);
    --color-base-content-100: oklch(29% 0.02 80);
    --color-base-content-200: oklch(38% 0.02 80);
    --color-base-content-300: oklch(47% 0.02 80);
    --color-base-100: oklch(98% 0.01 80);
    --color-base-200: oklch(92% 0.01 80);
    --color-base-300: oklch(86% 0.01 80);
    --color-base-400: oklch(80% 0.01 80);
  }
}
@layer base {
  [data-theme='dracula'] {
    --color-primary: #bd93f9;
    --color-secondary: #ff79c6;
    --color-success: #00a63e;
    --color-danger: #e7000b;
    --color-warning: #f0b100;
    --color-base-content: oklch(95% 0.02 280);
    --color-base-content-100: oklch(86% 0.02 280);
    --color-base-content-200: oklch(77% 0.02 280);
    --color-base-content-300: oklch(68% 0.02 280);
    --color-base-100: oklch(10% 0.02 280);
    --color-base-200: oklch(16% 0.02 280);
    --color-base-300: oklch(22% 0.02 280);
    --color-base-400: oklch(28% 0.02 280);
  }
}
@layer base {
  @media (prefers-color-scheme: light) {
    :root:not([data-theme]) {
      --color-primary: #2fc6f8;
      --color-secondary: #a835fa;
      --color-success: #02ce57;
      --color-danger: #f51d2f;
      --color-warning: #fabf2b;
      --color-base-content: oklch(21% 0.006 285.885);
      --color-base-content-100: oklch(30% 0.006 285.885);
      --color-base-content-200: oklch(39% 0.006 285.885);
      --color-base-content-300: oklch(48% 0.006 285.885);
      --color-base-100: oklch(100% 0.00011 271.152);
      --color-base-200: oklch(95% 0.00011 271.152);
      --color-base-300: oklch(83% 0.00011 271.152);
      --color-base-400: oklch(80% 0.00011 271.152);
    }
  }
  @media (prefers-color-scheme: dark) {
    :root:not([data-theme]) {
      --color-primary: #00bcff;
      --color-secondary: #9810fa;
      --color-success: #00a63e;
      --color-danger: #e7000b;
      --color-warning: #f0b100;
      --color-base-content: oklch(100% 0.00011 271.152);
      --color-base-content-100: oklch(91% 0.00011 271.152);
      --color-base-content-200: oklch(82% 0.00011 271.152);
      --color-base-content-300: oklch(73% 0.00011 271.152);
      --color-base-100: oklch(15% 0 0);
      --color-base-200: oklch(23% 0 0);
      --color-base-300: oklch(29% 0 0);
      --color-base-400: oklch(35% 0 0);
    }
  }
}
@layer base {
  @keyframes tooltip-appear {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}
@layer base {
  @keyframes skeletonWave {
    0% {
      background-position: 200% 0;
    }
    to {
      background-position: -200% 0;
    }
  }
}
@layer base {
  @keyframes skeletonPulse {
    0% {
      opacity: 1;
    }
    50% {
      opacity: .4;
    }
    to {
      opacity: 1;
    }
  }
}
@layer base {
  @keyframes indeterminate-progress-bar {
    from {
      left: -60%;
    }
    to {
      left: 100%;
    }
  }
}
@layer base {
  :root {
    background-color: var(--color-base-100);
    color: var(--color-base-content);
  }
}
@layer base {
  [data-theme] {
    background-color: var(--color-base-100);
    color: var(--color-base-content);
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor var(--color-base-200) ;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch,currentColor 35%,#0000) color-mix(in oklch,var(--color-base-200) 60%,#0000) ;
    }
  }
}
@layer base {
  .accordion-group {
    position: relative;
    margin-inline: auto;
    background-color: var(--color-base-100);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: .2s;
    transition-duration: .2s;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .accordion {
    padding: calc(var(--spacing) * 2);
  }
  .accordion-title {
    display: flex;
    width: 100%;
    cursor: pointer;
    align-items: center;
    justify-content: space-between;
    padding-block: calc(var(--spacing) * 4);
    text-align: left;
    -webkit-user-select: none;
    user-select: none;
  }
  .accordion-icon {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    &:is(:where(.peer):checked ~ *) {
      rotate: 180deg;
    }
  }
  .accordion-content {
    max-height: calc(var(--spacing) * 0);
    overflow: hidden;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.peer):checked ~ *) {
      max-height: calc(var(--spacing) * 40);
    }
  }
}
@layer base {
  .pagination {
    display: flex;
    list-style-type: none;
    padding-left: calc(var(--spacing) * 0);
    -webkit-user-select: none;
    user-select: none;
  }
  .page-link {
    display: block;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    padding-inline: 0.75rem;
    padding-block: 0.375rem;
    color: var(--color-base-content);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:hover {
      @media (hover: hover) {
        z-index: 2;
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-300);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-300) 20%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
    &:focus {
      z-index: 3;
    }
    &:focus {
      background-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-300) 20%, transparent);
      }
    }
    &:focus {
      color: var(--color-primary);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .page-item:not(:first-child) .page-link  {
    margin-left: -1px;
  }
  .page-item.active .page-link {
    z-index: 3;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary);
    background-color: var(--color-primary);
    color: var(--color-white);
  }
  .page-item.disabled .page-link {
    pointer-events: none;
    opacity: 50%;
  }
  .page-item:first-child .page-link {
    border-top-left-radius:  0.25rem;;
    border-bottom-left-radius: 0.25rem;
  }
  .page-item:last-child .page-link  {
      border-top-right-radius: 0.25rem;
    border-bottom-right-radius:  0.25rem;
  }
}
@layer base {
  .alert {
    position: relative;
    width: 100%;
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-100);
    padding: calc(var(--spacing) * 4);
    color: var(--color-base-content);
    &:has(svg) {
      padding-left: calc(var(--spacing) * 11);
    }
    &>svg {
      position: absolute;
    }
    &>svg {
      top: calc(var(--spacing) * 4);
    }
    &>svg {
      left: calc(var(--spacing) * 4);
    }
    &>svg+div {
      --tw-translate-y: -3px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .alert-icon {
    height: calc(var(--spacing) * 5);
    width: calc(var(--spacing) * 5);
  }
  .alert-headline {
    margin-bottom: calc(var(--spacing) * 1);
    --tw-leading: 1;
    line-height: 1;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .alert-text {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .alert-primary {
    border-color: var(--color-primary);
    background-color: var(--color-primary);
    color: var(--color-white);
  }
  .alert-secondary {
    border-color: var(--color-secondary);
    background-color: var(--color-secondary);
    color: var(--color-white);
  }
  .alert-danger {
    border-color: var(--color-danger);
    background-color: var(--color-danger);
    color: var(--color-white);
  }
  .alert-success {
    border-color: var(--color-success);
    background-color: var(--color-success);
    color: var(--color-white);
  }
  .alert-warning {
    border-color: var(--color-warning);
    background-color: var(--color-warning);
    color: var(--color-white);
  }
  .alert-primary-transparent {
    border-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    color: var(--color-primary);
  }
  .alert-secondary-transparent {
    border-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
    }
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
    }
    color: var(--color-secondary);
  }
  .alert-success-transparent {
    border-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-success) 10%, transparent);
    }
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
    }
    color: var(--color-success);
  }
  .alert-danger-transparent {
    border-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
    }
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
    }
    color: var(--color-danger);
  }
  .alert-warning-transparent {
    border-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
    }
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
    }
    color: var(--color-warning);
  }
}
@layer base {
  .badge {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-black);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-white);
  }
  .badge-with-icon {
    display: inline-flex;
    align-items: center;
    column-gap: calc(var(--spacing) * 1);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base-200);
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-content);
  }
  .badge-icon {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
    flex-shrink: 0;
  }
  .badge-primary {
    background-color: var(--color-primary);
  }
  .badge-secondary {
    background-color: var(--color-secondary);
  }
  .badge-success {
    background-color: var(--color-success);
  }
  .badge-danger {
    background-color: var(--color-danger);
  }
  .badge-warning {
    background-color: var(--color-warning);
  }
  .badge-outline-primary {
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-primary);
    background-color: transparent;
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary);
  }
  .badge-outline-secondary {
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-secondary);
    background-color: transparent;
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-secondary);
  }
  .badge-outline-success {
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-success);
    background-color: transparent;
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-success);
  }
  .badge-outline-danger {
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-danger);
    background-color: transparent;
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-danger);
  }
  .badge-outline-warning {
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-warning);
    background-color: transparent;
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-warning);
  }
  .badge-transparent-primary {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary);
  }
  .badge-transparent-secondary {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
    }
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-secondary);
  }
  .badge-transparent-success {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
    }
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-success);
  }
  .badge-transparent-danger {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
    }
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-danger);
  }
  .badge-transparent-warning {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
    }
    padding-inline: calc(var(--spacing) * 2.5);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-warning);
  }
}
@layer base {
  .avatar-sm {
    display: inline-block;
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
    border-radius: calc(infinity * 1px);
  }
  .avatar {
    display: inline-block;
    width: calc(var(--spacing) * 9.5);
    height: calc(var(--spacing) * 9.5);
    border-radius: calc(infinity * 1px);
  }
  .avatar-lg {
    display: inline-block;
    width: calc(var(--spacing) * 11);
    height: calc(var(--spacing) * 11);
    border-radius: calc(infinity * 1px);
  }
  .avatar-xl {
    display: inline-block;
    width: calc(var(--spacing) * 15.5);
    height: calc(var(--spacing) * 15.5);
    border-radius: calc(infinity * 1px);
  }
  .avatar-status-anchor {
    position: relative;
    display: inline-block;
  }
  .avatar-status {
    position: absolute;
    inset-inline-end: calc(var(--spacing) * 0);
    top: calc(var(--spacing) * 0);
    display: block;
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base-content);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-base-100);
  }
  .avatar-status-sm {
    width: calc(var(--spacing) * 1.5);
    height: calc(var(--spacing) * 1.5);
  }
  .avatar-status-lg {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .avatar-status-xl {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .avatar-status-primary {
    background-color: var(--color-primary);
  }
  .avatar-status-secondary {
    background-color: var(--color-secondary);
  }
  .avatar-status-danger {
    background-color: var(--color-danger);
  }
  .avatar-status-success {
    background-color: var(--color-success);
  }
  .avatar-status-warning {
    background-color: var(--color-warning);
  }
  .avatar-group {
    display: flex;
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
}
@layer base {
  .card {
    display: flex;
    flex-direction: column;
    border-radius: var(--radius-xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-100);
    padding: calc(var(--spacing) * 4);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .card-title {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-base-content);
  }
  .card-subtitle {
    margin-top: calc(var(--spacing) * 1);
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
    text-transform: uppercase;
  }
  .card-text {
    margin-top: calc(var(--spacing) * 2);
    color: var(--color-base-content);
  }
  .card-link {
    display: inline-flex;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    padding-inline: calc(var(--spacing) * 0);
    padding-block: calc(var(--spacing) * 3);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-primary);
    --tw-duration: .2s;
    transition-duration: .2s;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
    &:focus {
      color: var(--color-primary);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      text-decoration-line: underline;
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .card-img-top {
    height: auto;
    width: 100%;
    border-top-left-radius: var(--radius-xl);
    border-top-right-radius: var(--radius-xl);
  }
  .card-img-bottom {
    height: auto;
    width: 100%;
    border-bottom-right-radius: var(--radius-xl);
    border-bottom-left-radius: var(--radius-xl);
  }
  .card-header {
    border-top-left-radius: var(--radius-xl);
    border-top-right-radius: var(--radius-xl);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 5);
    }
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .card-header-title {
    margin-top: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-gray-500);
    @media (prefers-color-scheme: dark) {
      color: var(--color-neutral-500);
    }
  }
  .card-primary {
    display: flex;
    max-width: var(--container-xs);
    flex-direction: column;
    border-radius: var(--radius-xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    border-top-color: var(--color-primary);
    background-color: var(--color-base-100);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .card-secondary {
    display: flex;
    max-width: var(--container-xs);
    flex-direction: column;
    border-radius: var(--radius-xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    border-top-color: var(--color-secondary);
    background-color: var(--color-base-100);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .card-success {
    display: flex;
    max-width: var(--container-xs);
    flex-direction: column;
    border-radius: var(--radius-xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    border-top-color: var(--color-success);
    background-color: var(--color-base-100);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .card-danger {
    display: flex;
    max-width: var(--container-xs);
    flex-direction: column;
    border-radius: var(--radius-xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    border-top-color: var(--color-danger);
    background-color: var(--color-base-100);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .card-warning {
    display: flex;
    max-width: var(--container-xs);
    flex-direction: column;
    border-radius: var(--radius-xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    border-top-color: var(--color-warning);
    background-color: var(--color-base-100);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
@layer base {
  .modal-toggle {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
    }
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: 1.5em;
    line-height: 1.5em;
    color: var(--color-base-content);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: .2s;
    transition-duration: .2s;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    -webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-300);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .modal-container {
    position: fixed;
    inset: calc(var(--spacing) * 0);
    z-index: 9998;
    display: none;
    align-items: center;
    justify-content: center;
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
    padding-inline: calc(var(--spacing) * 4);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 2s;
    transition-duration: 2s;
    &:is(:where(.peer):checked ~ *) {
      display: flex;
    }
  }
  .modal-content {
    position: relative;
    z-index: 9999;
    border-radius: var(--radius-lg);
    background-color: var(--color-base-100);
    padding: calc(var(--spacing) * 6);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .modal-title {
    margin-bottom: calc(var(--spacing) * 4);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .modal-close {
    position: absolute;
    top: calc(var(--spacing) * 2);
    right: calc(var(--spacing) * 2);
    cursor: pointer;
    padding: calc(var(--spacing) * 3);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-base-content);
  }
}
@layer base {
  .progress {
    position: relative;
    height: calc(var(--spacing) * 2);
    width: calc(var(--spacing) * 40);
    appearance: none;
    overflow: hidden;
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base-200);
  }
  .progress::-webkit-progress-bar {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base-200);
  }
  .progress::-moz-progress-bar {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-primary);
  }
  .progress::-webkit-progress-value {
    border-radius: calc(infinity * 1px);
    background-color: var(--color-primary);
  }
  .progress-sm {
    height: calc(var(--spacing) * 1);
  }
  .progress-lg {
    height: calc(var(--spacing) * 3);
  }
  .progress-xl {
    height: calc(var(--spacing) * 4);
  }
  .progress:indeterminate::after,.progress-indeterminate::after {
    position: absolute;
    top: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * 0);
    width: calc(1/3 * 100%);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-primary);
    --tw-content: '';
    content: var(--tw-content);
    animation: indeterminate-progress-bar 1s infinite ease-in;
  }
  .progress-primary::-webkit-progress-value,.progress-flat-primary::-webkit-progress-value,.progress-primary.progress:indeterminate::after,.progress-flat-primary.progress:indeterminate::after,.progress-primary.progress-indeterminate::after,.progress-flat-primary.progress-indeterminate::after {
    background-color: var(--color-primary);
  }
  .progress-success::-webkit-progress-value,.progress-flat-success::-webkit-progress-value,.progress-success.progress:indeterminate::after,.progress-flat-success.progress:indeterminate::after,.progress-success.progress-indeterminate::after,.progress-flat-success.progress-indeterminate::after {
    background-color: var(--color-success);
  }
  .progress-secondary::-webkit-progress-value,.progress-flat-secondary::-webkit-progress-value,.progress-secondary.progress:indeterminate::after,.progress-flat-secondary.progress:indeterminate::after,.progress-secondary.progress-indeterminate::after,.progress-flat-secondary.progress-indeterminate::after {
    background-color: var(--color-secondary);
  }
  .progress-danger::-webkit-progress-value,.progress-flat-danger::-webkit-progress-value,.progress-danger.progress:indeterminate::after,.progress-flat-danger.progress:indeterminate::after,.progress-danger.progress-indeterminate::after,.progress-flat-danger.progress-indeterminate::after {
    background-color: var(--color-danger);
  }
  .progress-warning::-webkit-progress-value,.progress-flat-warning::-webkit-progress-value,.progress-warning.progress:indeterminate::after,.progress-flat-warning.progress:indeterminate::after,.progress-warning.progress-indeterminate::after,.progress-flat-warning.progress-indeterminate::after {
    background-color: var(--color-warning);
  }
  .progress-flat-primary::-webkit-progress-bar,.progress-flat-primary.progress-indeterminate {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
    }
  }
  .progress-flat-secondary::-webkit-progress-bar,.progress-flat-secondary.progress-indeterminate {
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
    }
  }
  .progress-flat-success::-webkit-progress-bar,.progress-flat-success.progress-indeterminate {
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 20%, transparent);
    }
  }
  .progress-flat-danger::-webkit-progress-bar,.progress-flat-danger.progress-indeterminate {
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 20%, transparent);
    }
  }
  .progress-flat-warning::-webkit-progress-bar,.progress-flat-warning.progress-indeterminate {
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
    }
  }
}
@layer base {
  .spinner {
    display: inline-block;
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
    animation: var(--animate-spin);
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 3px;
    border-color: currentcolor;
    border-top-color: transparent;
    color: var(--color-base-content-300);
  }
  .spinner-primary {
    color: var(--color-primary);
  }
  .spinner-success {
    color: var(--color-success);
  }
  .spinner-secondary {
    color: var(--color-secondary);
  }
  .spinner-danger {
    color: var(--color-danger);
  }
  .spinner-warning {
    color: var(--color-warning);
  }
  .spinner-sm {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .spinner-lg {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .spinner-xl {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
}
@layer base {
  .tooltip {
    position: relative;
    --tooltip-bg: #000000;
    --tooltip-border: #000000;
  }
  .tooltip-primary {
    --tooltip-bg: var(--color-primary);
    --tooltip-border: var(--color-primary);
  }
  .tooltip-secondary {
    --tooltip-bg: var(--color-secondary);
    --tooltip-border: var(--color-secondary);
  }
  .tooltip-warning {
    --tooltip-bg: var(--color-warning);
    --tooltip-border: var(--color-warning);
  }
  .tooltip-success {
    --tooltip-bg: var(--color-success);
    --tooltip-border: var(--color-success);
  }
  .tooltip-danger {
    --tooltip-bg: var(--color-danger);
    --tooltip-border: var(--color-danger);
  }
  .tooltip::after {
    pointer-events: none;
    position: absolute;
    z-index: 1000000;
    display: none;
    border-radius: var(--radius-lg);
    background-color: var(--tooltip-bg);
    padding-inline: 1rem;
    padding-block: .375rem;
    text-align: center;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: 1.5rem;
    line-height: 1.5rem;
    --tw-tracking: var(--tracking-normal);
    letter-spacing: var(--tracking-normal);
    white-space: pre;
    color: var(--color-white);
    text-transform: none;
    opacity: 0%;
    text-shadow: none;
    content: attr(data-content);
    -webkit-font-smoothing: subpixel-antialiased;
  }
  .tooltip::before {
    pointer-events: none;
    position: absolute;
    z-index: 1000000;
    display: none;
    height: calc(var(--spacing) * 0);
    width: calc(var(--spacing) * 0);
    border-color: var(--tooltip-border);
    opacity: 0%;
    content: "";
    border: 6px solid transparent;
  }
  .tooltip:active::after, .tooltip:active::before, .tooltip:focus::after, .tooltip:focus::before, .tooltip:hover::after, .tooltip:hover::before  {
    display: inline-block;
    text-decoration: none;
    animation-name: tooltip-appear;
    animation-duration:  0.1s;
    animation-fill-mode: forwards;
    animation-timing-function: ease-in;
    animation-delay: 0.4s;
  }
  .tooltip-s::after, .tooltip-se::after, .tooltip-sw::after {
    top: 100%;
    right: 50%;
    margin-top: 6px;
  }
  .tooltip-s::before, .tooltip-se::before, .tooltip-sw::before {
    top: auto;
    right: 50%;
    bottom: -7px;
    margin-right: -6px;
    border-bottom-color: var(--tooltip-border);
  }
  .tooltip-se::after {
    right: auto;
    margin-right: -16px;
  }
  .tooltip-sw::after {
    margin-right: -16px;
  }
  .tooltip-n::after, .tooltip-ne::after, .tooltip-nw::after {
    right: 50%;
    bottom: 100%;
    margin-bottom: 6px;
  }
  .tooltip-ne::after, .tooltip-nw::after {
    right: 50%;
    bottom: 100%;
    margin-bottom: 6px;
  }
  .tooltip-ne::before, .tooltip-nw::before {
    top: -7px;
    right: 50%;
    bottom: auto;
    margin-right: -6px;
    border-top-color: var(--tooltip-border);
  }
  .tooltip-n::before, .tooltip-ne::before, .tooltip-nw::before {
    top: -7px;
    right: 50%;
    bottom: auto;
    margin-right: -6px;
    border-top-color: var(--tooltip-border);
  }
  .tooltip-ne::after {
    right: auto;
    left: 50%;
    margin-left: -16px;
  }
  .tooltip-nw::after {
    margin-right: -16px;
  }
  .tooltip-n::after, .tooltip-s::after  {
    --tw-translate-x: 50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .tooltip-w::after {
    right: 100%;
    bottom: 50%;
    margin-right: 6px;
    --tw-translate-y: 50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .tooltip-w::before {
    top: 50%;
    bottom: 50%;
    left: -7px;
    margin-top: -6px;
    border-left-color: var(--tooltip-border);
  }
  .tooltip-e::after {
    bottom: 50%;
    left: 100%;
    margin-left: 6px;
    --tw-translate-y: 50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .tooltip-e::before {
    top: 50%;
    right: -7px;
    bottom: 50%;
    margin-top: -6px;
    border-right-color: var(--tooltip-border);
  }
}
@layer base {
  .button {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 10%, transparent);
    }
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: 1.5em;
    line-height: 1.5em;
    color: var(--color-base-content);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    -webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-base-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      scale: 0.98;
    }
    &:active {
      background-color: var(--color-base-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-outline {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: transparent;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-base-300);
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
        }
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      scale: 0.98;
    }
    &:active {
      border-color: var(--color-base-300);
    }
    &:active {
      background-color: var(--color-base-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-soft {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 30%, transparent);
    }
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-300);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      scale: 0.98;
    }
    &:active {
      background-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .button-ghost {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content-200);
      }
    }
    &:focus {
      background-color: var(--color-base-200);
    }
    &:focus {
      color: var(--color-base-content-200);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      scale: 0.98;
    }
    &:active {
      background-color: var(--color-base-200);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-link {
    display: inline-flex;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    padding-inline: calc(var(--spacing) * 5);
    padding-block: calc(var(--spacing) * 3);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
    &:focus {
      color: var(--color-base-content);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      text-decoration-line: underline;
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-primary {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    background-color: var(--color-primary);
    color: var(--color-white);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
    &:focus {
      background-color: var(--color-primary);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-secondary {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    background-color: var(--color-secondary);
    color: var(--color-white);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
      }
    }
    &:focus {
      background-color: var(--color-secondary);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-success {
    cursor: pointer;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    background-color: var(--color-success);
    color: var(--color-white);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success);
      }
    }
    &:focus {
      background-color: var(--color-success);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-danger {
    cursor: pointer;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    background-color: var(--color-danger);
    color: var(--color-white);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger);
      }
    }
    &:focus {
      background-color: var(--color-danger);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-warning {
    cursor: pointer;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: transparent;
    background-color: var(--color-warning);
    color: var(--color-white);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning);
      }
    }
    &:focus {
      background-color: var(--color-warning);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-loading {
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    &::before {
      content: var(--tw-content);
      display: inline-block;
    }
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
    &::before {
      content: var(--tw-content);
      animation: var(--animate-spin);
    }
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
    &::before {
      content: var(--tw-content);
      border-style: var(--tw-border-style);
      border-width: 3px;
    }
    &::before {
      content: var(--tw-content);
      border-color: currentcolor;
    }
    &::before {
      content: var(--tw-content);
      border-top-color: transparent;
    }
    &::before {
      content: var(--tw-content);
      color: var(--color-base-content);
    }
  }
  .button-full {
    display: inline-flex;
    width: 100%;
    align-items: center;
    justify-content: center;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 3);
  }
  .button-rounded {
    border-radius: calc(infinity * 1px);
  }
  .button-outline-primary {
    border-color: var(--color-primary);
    color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        border-color: transparent;
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:focus {
      border-color: transparent;
    }
    &:focus {
      background-color: var(--color-primary);
    }
    &:focus {
      color: var(--color-white);
    }
    &:active {
      background-color: var(--color-primary);
    }
    &:active {
      color: var(--color-white);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-outline-secondary {
    border-color: var(--color-secondary);
    color: var(--color-secondary);
    &:hover {
      @media (hover: hover) {
        border-color: transparent;
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:focus {
      border-color: transparent;
    }
    &:focus {
      background-color: var(--color-secondary);
    }
    &:focus {
      color: var(--color-white);
    }
    &:active {
      background-color: var(--color-secondary);
    }
    &:active {
      color: var(--color-white);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-outline-success {
    border-color: var(--color-success);
    color: var(--color-success);
    &:hover {
      @media (hover: hover) {
        border-color: transparent;
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:focus {
      border-color: transparent;
    }
    &:focus {
      background-color: var(--color-success);
    }
    &:focus {
      color: var(--color-white);
    }
    &:active {
      background-color: var(--color-success);
    }
    &:active {
      color: var(--color-white);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-outline-danger {
    border-color: var(--color-danger);
    color: var(--color-danger);
    &:hover {
      @media (hover: hover) {
        border-color: transparent;
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:focus {
      border-color: transparent;
    }
    &:focus {
      background-color: var(--color-danger);
    }
    &:focus {
      color: var(--color-white);
    }
    &:active {
      background-color: var(--color-danger);
    }
    &:active {
      color: var(--color-white);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-outline-warning {
    border-color: var(--color-warning);
    color: var(--color-warning);
    &:hover {
      @media (hover: hover) {
        border-color: transparent;
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:focus {
      border-color: transparent;
    }
    &:focus {
      background-color: var(--color-warning);
    }
    &:focus {
      color: var(--color-white);
    }
    &:active {
      background-color: var(--color-warning);
    }
    &:active {
      color: var(--color-white);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-soft-primary {
    cursor: pointer;
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-primary) 95%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .button-soft-secondary {
    cursor: pointer;
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
    }
    color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-secondary) 95%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-secondary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-secondary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .button-soft-success {
    cursor: pointer;
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
    }
    color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-success) 95%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-success) 20%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-success);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-success) 20%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-success);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-success) 20%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .button-soft-danger {
    cursor: pointer;
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
    }
    color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-danger) 95%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-danger) 20%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger) 20%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger) 20%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .button-soft-warning {
    cursor: pointer;
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
    }
    color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-warning) 95%, transparent);
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-warning);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-warning);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .button-ghost-primary {
    cursor: pointer;
    color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
    &:focus {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
      }
    }
    &:focus {
      color: var(--color-primary);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-ghost-secondary {
    cursor: pointer;
    color: var(--color-secondary);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 5%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-secondary);
      }
    }
    &:focus {
      background-color: var(--color-secondary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary) 5%, transparent);
      }
    }
    &:focus {
      color: var(--color-secondary);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-secondary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary) 5%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-ghost-success {
    cursor: pointer;
    color: var(--color-success);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-success) 5%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-success);
      }
    }
    &:focus {
      background-color: var(--color-success);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-success) 5%, transparent);
      }
    }
    &:focus {
      color: var(--color-success);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-success);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-success) 5%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-ghost-danger {
    cursor: pointer;
    color: var(--color-danger);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-danger) 5%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-danger);
      }
    }
    &:focus {
      background-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger) 5%, transparent);
      }
    }
    &:focus {
      color: var(--color-danger);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger) 5%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-ghost-warning {
    cursor: pointer;
    color: var(--color-warning);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-warning);
      }
    }
    &:focus {
      background-color: var(--color-warning);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
      }
    }
    &:focus {
      color: var(--color-warning);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-warning);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .button-small {
    gap: calc(var(--spacing) * 2);
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .button-large {
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 3);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .button-x-large {
    padding-inline: calc(var(--spacing) * 8);
    padding-block: calc(var(--spacing) * 4);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
}
@layer base {
  .kbd {
    display: inline-flex;
    height: fit-content;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-md);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
    }
    padding-inline: .625rem;
    padding-block: .375rem;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: 1;
    line-height: 1;
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    white-space: nowrap;
    --tw-shadow: 0px 1.5px 0px var(--tw-shadow-color, rgba(0,0,0,0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .kbd-xs {
    padding-inline: .375rem;
    padding-block: .125rem;
  }
  .kbd-sm,.kbd-xs {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: 1;
    line-height: 1;
  }
  .kbd-sm {
    padding-inline: .5rem;
    padding-block: .25rem;
  }
  .kbd-md {
    padding-inline: .625rem;
    padding-block: .375rem;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-leading: 1;
    line-height: 1;
  }
  .kbd-lg {
    padding-inline: .75rem;
    padding-block: .5rem;
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .spinner-sm {
    padding-inline: .875rem;
    padding-block: .5rem;
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
}
@layer base {
  .drawer-toggle {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
    }
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: 1.5em;
    line-height: 1.5em;
    color: var(--color-base-content);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: .2s;
    transition-duration: .2s;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    -webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-300);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
        }
      }
    }
    &:focus {
      background-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
      }
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:active {
      background-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-300) 40%, transparent);
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .drawer-overlay {
    position: fixed;
    display: none;
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
    &:is(:where(.peer):checked ~ *) {
      display: block;
    }
  }
  .drawer-content {
    position: relative;
    padding: calc(var(--spacing) * 6);
  }
  .drawer-close {
    position: absolute;
    top: calc(var(--spacing) * 2);
    right: calc(var(--spacing) * 2);
    display: block;
    cursor: pointer;
    padding: calc(var(--spacing) * 3);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-base-content);
  }
  .drawer-title {
    margin-top: calc(var(--spacing) * 3);
    margin-bottom: calc(var(--spacing) * 4);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .drawer-left {
    position: fixed;
    top: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 9999;
    height: 100%;
    width: calc(var(--spacing) * 64);
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    background-color: var(--color-base-100);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .drawer-right {
    position: fixed;
    top: calc(var(--spacing) * 0);
    right: calc(var(--spacing) * 0);
    z-index: 9999;
    height: 100%;
    width: calc(var(--spacing) * 64);
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    background-color: var(--color-base-100);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .drawer-top {
    position: fixed;
    top: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 9999;
    width: 100%;
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    background-color: var(--color-base-100);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .drawer-bottom {
    position: fixed;
    bottom: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 9999;
    width: 100%;
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    background-color: var(--color-base-100);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
}
@layer base {
  .table {
    margin-inline: 0rem;
    margin-block: 1rem;
    width: 100%;
    border-collapse: collapse;
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
    background-color: var(--color-base-100);
    color: var(--color-base-content);
  }
  .table td, .table th {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-top-style: var(--tw-border-style);
    border-top-width: 0px;
    border-right-style: var(--tw-border-style);
    border-right-width: 0px;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-left-style: var(--tw-border-style);
    border-left-width: 0px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    padding-inline: 15px;
    padding-block: 10px;
    text-align: left;
    vertical-align: top;
  }
  .table.table-bordered td, .table.table-bordered th {
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    padding-inline: 15px;
    padding-block: 10px;
    text-align: left;
    vertical-align: top;
  }
  .table.table-hover > tbody > tr:hover, .table.table-striped > tbody > tr:nth-child(odd) {
    background-color: var(--color-base-200);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: .25s;
    transition-duration: .25s;
  }
  .table.table-right thead tr th, .table.table-right tbody tr td {
    text-align: right;
  }
  .table.table-centered thead tr th, .table.table-centered tbody tr td {
    text-align: center;
  }
  tbody, tfoot, thead {
    background-color: var(--color-base-200);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-200) 2%, transparent);
    }
  }
}
@layer base {
  .footer {
    background-color: var(--color-base-100);
    color: var(--color-base-content);
  }
  .footer-container {
    margin-inline: auto;
    max-width: var(--breakpoint-xl);
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
    overflow: hidden;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 12);
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .footer-link {
    padding-inline: calc(var(--spacing) * 5);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
    color: var(--color-base-content);
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }
      }
    }
  }
  .footer-icon {
    color: var(--color-base-content);
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }
      }
    }
  }
  .footer-copyright {
    margin-top: calc(var(--spacing) * 8);
    text-align: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
    color: var(--color-gray-400);
  }
  .footer-primary {
    background-color: var(--color-primary);
  }
  .footer-primary .footer-link, .footer-primary .footer-icon {
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  }
  .footer-primary .footer-copyright {
    color: color-mix(in srgb, #fff 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 75%, transparent);
    }
  }
  .footer-secondary {
    background-color: var(--color-secondary);
  }
  .footer-secondary .footer-link, .footer-secondary .footer-icon {
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  }
  .footer-secondary .footer-copyright {
    color: color-mix(in srgb, #fff 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 75%, transparent);
    }
  }
  .footer-success {
    background-color: var(--color-success);
  }
  .footer-success .footer-link, .footer-success .footer-icon {
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  }
  .footer-success .footer-copyright {
    color: color-mix(in srgb, #fff 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 75%, transparent);
    }
  }
  .footer-danger {
    background-color: var(--color-danger);
  }
  .footer-danger .footer-link, .footer-danger .footer-icon {
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  }
  .footer-danger .footer-copyright {
    color: color-mix(in srgb, #fff 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 75%, transparent);
    }
  }
  .footer-warning {
    background-color: var(--color-warning);
  }
  .footer-warning .footer-link, .footer-warning .footer-icon {
    color: var(--color-white);
    &:hover {
      @media (hover: hover) {
        color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  }
  .footer-warning .footer-copyright {
    color: color-mix(in srgb, #fff 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 75%, transparent);
    }
  }
}
@layer base {
  .tabs {
    display: flex;
    width: fit-content;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: center;
    white-space: nowrap;
  }
  .tab {
    display: flex;
    cursor: pointer;
    padding-inline: calc(var(--spacing) * 3);
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .tab-disabled {
    pointer-events: none;
    cursor: not-allowed;
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
    }
  }
  .tab-bordered {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
    border-color: var(--color-base-400);
    padding-block: calc(var(--spacing) * 2);
  }
  .tab:not(.tab-active) {
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
        }
      }
    }
  }
  .tabs:has(.tab-underline) .tab {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .tab-active {
    border-bottom-color: var(--color-primary);
    color: var(--color-primary);
  }
  .tab-underline {
    position: relative;
    padding-bottom: calc(var(--spacing) * 2);
  }
  .tab-underline::after {
    position: absolute;
    bottom: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 10;
    height: calc(var(--spacing) * 0.5);
    width: 100%;
    background-color: var(--color-primary);
    --tw-content: '';
    content: var(--tw-content);
    transition: transform 0.3s ease;
  }
  .tab-pill {
    border-radius: var(--radius-xl);
    border-color: transparent;
    padding: calc(var(--spacing) * 2);
    --tw-leading: calc(var(--spacing) * 5);
    line-height: calc(var(--spacing) * 5);
  }
  .tab-pill:not(.tab-active) {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-200) 60%, transparent);
        }
      }
    }
    &:active {
      background-color: var(--color-base-200);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
      }
    }
  }
  .tab-pill.tab-active {
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  .tab-toggle {
    position: absolute;
    height: calc(var(--spacing) * 0);
    width: calc(var(--spacing) * 0);
    appearance: none;
    opacity: 0%;
  }
  .tab-toggle:checked + .tab {
    border-bottom-color: var(--color-primary);
    color: var(--color-primary);
  }
  .tabs-underline .tab-toggle + .tab {
    position: relative;
    padding-bottom: calc(var(--spacing) * 2);
  }
  .tabs-underline .tab-toggle:checked + .tab::before {
    position: absolute;
    bottom: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 10;
    height: calc(var(--spacing) * 0.5);
    width: 100%;
    background-color: var(--color-primary);
    --tw-content: '';
    content: var(--tw-content);
    transition: transform 0.3s ease;
  }
  .tab-toggle:checked + .tab.tab-pill {
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
  .tabs-boxed .tab-toggle:checked + .tab {
    background-color: var(--color-base-200);
    color: var(--color-base-content);
  }
}
@layer base {
  .dot {
    display: inline-flex;
    height: .625rem;
    min-height: 10px;
    width: .625rem;
    min-width: 10px;
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base-content-300);
    -webkit-user-select: none;
    user-select: none;
  }
  .dot-primary {
    background-color: var(--color-primary);
  }
  .dot-secondary {
    background-color: var(--color-secondary);
  }
  .dot-success {
    background-color: var(--color-success);
  }
  .dot-danger {
    background-color: var(--color-danger);
  }
  .dot-warning {
    background-color: var(--color-warning);
  }
}
@layer base {
  .skeleton {
    height: 100%;
    width: 100%;
    background-image: linear-gradient(90deg,#9ca3af 20%,#374151 50%,#9ca3af 80%);
    opacity: 4%;
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    animation: skeletonWave 2.5s linear infinite;
    background-size: 400% 100%;
  }
}
@layer base {
  .dropdown {
    position: relative;
  }
  .dropdown-toggle {
    cursor: pointer;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-base-content);
  }
  .dropdown-menu {
    position: absolute;
    left: calc(var(--spacing) * 0);
    z-index: 10;
    margin-top: calc(var(--spacing) * 2);
    display: none;
    min-width: calc(var(--spacing) * 48);
    transform-origin: top left;
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-100);
    padding: calc(var(--spacing) * 1.5);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-outline-style: none;
    outline-style: none;
    &:is(:where(.peer):checked ~ *) {
      display: block;
    }
  }
  .dropdown-item {
    display: flex;
    width: 100%;
    align-items: center;
    border-radius: var(--radius-md);
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 2);
    text-align: left;
    color: var(--color-base-content);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-outline-style: none;
    outline-style: none;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
      }
    }
    &:focus-visible {
      background-color: var(--color-base-200);
    }
    &:disabled {
      cursor: not-allowed;
    }
    &:disabled {
      opacity: 50%;
    }
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 1.5);
    }
  }
  .dropdown-item-primary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
    &:focus-visible {
      color: var(--color-primary);
    }
    &:active {
      background-color: var(--color-primary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
      }
    }
  }
  .dropdown-item-secondary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-secondary);
      }
    }
    &:focus-visible {
      color: var(--color-secondary);
    }
    &:active {
      background-color: var(--color-secondary);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
      }
    }
  }
  .dropdown-item-success {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-success);
      }
    }
    &:focus-visible {
      color: var(--color-success);
    }
    &:active {
      background-color: var(--color-success);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
      }
    }
  }
  .dropdown-item-danger {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-danger);
      }
    }
    &:focus-visible {
      color: var(--color-danger);
    }
    &:active {
      background-color: var(--color-danger);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
      }
    }
  }
  .dropdown-item-warning {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-warning);
      }
    }
    &:focus-visible {
      color: var(--color-warning);
    }
    &:active {
      background-color: var(--color-warning);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
      }
    }
  }
  .dropdown-link {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    --tw-outline-style: none;
    outline-style: none;
  }
}
@layer base {
  .steps {
    display: flex;
    width: 100%;
    gap: calc(var(--spacing) * 6);
  }
  .steps-vertical {
    width: fit-content;
    flex-direction: column;
    align-items: center;
    gap: calc(var(--spacing) * 2);
  }
  .steps-horizontal {
    width: 100%;
    flex-direction: row;
    align-items: center;
    gap: calc(var(--spacing) * 6);
  }
  .step {
    display: flex;
    width: 100%;
    flex-direction: row;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    white-space: nowrap;
  }
  .steps-horizontal .step {
    width: 100%;
    flex-direction: row;
    white-space: nowrap;
  }
  .steps-vertical .step {
    display: flex;
    width: fit-content;
    flex-direction: column;
    align-items: center;
    gap: calc(var(--spacing) * 2);
  }
  .step-circle {
    display: flex;
    min-height: 2rem;
    min-width: 2rem;
    align-items: center;
    justify-content: center;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-100);
    color: var(--color-base-content);
  }
  .step:not(:last-child):after {
    position: relative;
    height: 1px;
    min-height: calc(var(--spacing) * 0);
    width: 100%;
    min-width: 2rem;
    flex: 1;
    background-color: var(--color-base-300);
    --tw-content: '';
    content: var(--tw-content);
  }
  .steps-horizontal .step:not(:last-child):after {
    position: relative;
    height: 1px;
    min-height: calc(var(--spacing) * 0);
    width: 100%;
    min-width: 2rem;
    flex: 1;
    --tw-content: '';
    content: var(--tw-content);
  }
  .steps-vertical .step:not(:last-child):after {
    position: relative;
    height: 100%;
    min-height: 2rem;
    width: 1px;
    min-width: calc(var(--spacing) * 0);
    flex: 1;
    --tw-content: '';
    content: var(--tw-content);
  }
  .step-done .step-circle {
    border-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-primary) 7%, transparent);
    }
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 12%, transparent);
    }
    color: var(--color-base-content);
  }
  .step-primary.step-active .step-circle {
    border-color: var(--color-primary);
    background-color: var(--color-primary);
    color: var(--color-white);
  }
  .step-done.step-primary::after {
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 50%, transparent);
    }
  }
  .step-done.step-secondary .step-circle {
    border-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-secondary) 7%, transparent);
    }
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 12%, transparent);
    }
    color: var(--color-base-content);
  }
  .step-secondary.step-active .step-circle {
    border-color: var(--color-secondary);
    background-color: var(--color-secondary);
    color: var(--color-white);
  }
  .step-done.step-secondary::after {
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 50%, transparent);
    }
  }
  .step-done.step-success .step-circle {
    border-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-success) 7%, transparent);
    }
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 12%, transparent);
    }
    color: var(--color-base-content);
  }
  .step-success.step-active .step-circle {
    border-color: var(--color-success);
    background-color: var(--color-success);
    color: var(--color-white);
  }
  .step-done.step-success::after {
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 50%, transparent);
    }
  }
  .step-done.step-danger .step-circle {
    border-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-danger) 7%, transparent);
    }
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 12%, transparent);
    }
    color: var(--color-base-content);
  }
  .step-danger.step-active .step-circle {
    border-color: var(--color-danger);
    background-color: var(--color-danger);
    color: var(--color-white);
  }
  .step-done.step-danger::after {
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 50%, transparent);
    }
  }
  .step-done.step-warning .step-circle {
    border-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-warning) 7%, transparent);
    }
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 12%, transparent);
    }
    color: var(--color-base-content);
  }
  .step-warning.step-active .step-circle {
    border-color: var(--color-warning);
    background-color: var(--color-warning);
    color: var(--color-white);
  }
  .step-done.step-warning::after {
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 50%, transparent);
    }
  }
}
@layer base {
  .button-grouped,.button-grouped-rounded {
    display: inline-flex;
    border-radius: var(--radius-lg);
  }
  .button-grouped-rounded .button {
    margin-inline-start: -1px;
    border-radius: 0;
    &:first-child {
      margin-inline-start: calc(var(--spacing) * 0);
    }
    &:first-child {
      border-start-start-radius: 9999px;
      border-end-start-radius: 9999px;
    }
    &:last-child {
      border-start-end-radius: 9999px;
      border-end-end-radius: 9999px;
    }
  }
  .button-grouped  .button {
    margin-inline-start: -1px;
    border-radius: 0;
    &:first-child {
      margin-inline-start: calc(var(--spacing) * 0);
    }
    &:first-child {
      border-start-start-radius: var(--radius-lg);
      border-end-start-radius: var(--radius-lg);
    }
    &:last-child {
      border-start-end-radius: var(--radius-lg);
      border-end-end-radius: var(--radius-lg);
    }
    &:focus {
      z-index: 10;
    }
  }
}
@layer base {
  .link {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: .15s;
    transition-duration: .15s;
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
        }
      }
    }
  }
  .link-primary {
    color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-primary) 85%, transparent);
        }
      }
    }
  }
  .link-secondary {
    color: var(--color-secondary);
    &:hover {
      @media (hover: hover) {
        color: var(--color-secondary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-secondary) 85%, transparent);
        }
      }
    }
  }
  .link-success {
    color: var(--color-success);
    &:hover {
      @media (hover: hover) {
        color: var(--color-success);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-success) 85%, transparent);
        }
      }
    }
  }
  .link-warning {
    color: var(--color-warning);
    &:hover {
      @media (hover: hover) {
        color: var(--color-warning);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-warning) 85%, transparent);
        }
      }
    }
  }
  .link-danger {
    color: var(--color-danger);
    &:hover {
      @media (hover: hover) {
        color: var(--color-danger);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-danger) 85%, transparent);
        }
      }
    }
  }
  .link-underline,.link-underline-hover:hover {
    text-decoration-line: underline;
  }
  .link-ghost {
    border-radius: var(--radius-2xl);
    padding-inline: .5rem;
    padding-block: .25rem;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
      }
    }
  }
  .link-ghost-primary {
    border-radius: var(--radius-2xl);
    padding-inline: .5rem;
    padding-block: .25rem;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .link-ghost-secondary {
    border-radius: var(--radius-2xl);
    padding-inline: .5rem;
    padding-block: .25rem;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-secondary);
      }
    }
  }
  .link-ghost-warning {
    border-radius: var(--radius-2xl);
    padding-inline: .5rem;
    padding-block: .25rem;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-warning);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-warning);
      }
    }
  }
  .link-ghost-success {
    border-radius: var(--radius-2xl);
    padding-inline: .5rem;
    padding-block: .25rem;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-success);
      }
    }
  }
  .link-ghost-danger {
    border-radius: var(--radius-2xl);
    padding-inline: .5rem;
    padding-block: .25rem;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-danger);
      }
    }
  }
}
@layer base {
  .sidebar {
    top: calc(var(--spacing) * 0);
    z-index: 55;
    display: flex;
    height: 100vh;
    width: 100%;
    max-width: 18rem;
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    flex-direction: column;
    justify-content: space-between;
    background-color: var(--color-base-200);
  }
  .sidebar-sticky {
    position: sticky;
  }
  .sidebar-fixed-left {
    position: fixed;
    left: calc(var(--spacing) * 0);
  }
  .sidebar-fixed-right {
    position: fixed;
    right: calc(var(--spacing) * 0);
  }
  .sidebar-title {
    display: flex;
    width: 100%;
    align-items: center;
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-base-content);
  }
  .sidebar-content {
    display: flex;
    height: 100%;
    width: 100%;
    flex-direction: column;
    overflow-y: auto;
    padding-block: calc(var(--spacing) * 6);
  }
  .sidebar-footer {
    display: flex;
    width: 100%;
    flex-direction: column;
    color: var(--color-base-content);
  }
  .sidebar-mobile {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .sidebar-state {
    display: none;
  }
  html:has(.sidebar-state:checked) {
    overflow: hidden;
  }
  .sidebar-state:checked~.sidebar-overlay {
    position: fixed;
    inset: calc(var(--spacing) * 0);
    z-index: 50;
    background-color: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
    opacity: 80%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    &:is(:where(.peer):checked ~ *) {
      pointer-events: auto;
    }
    &:is(:where(.peer):checked ~ *) {
      opacity: 100%;
    }
  }
  .menu {
    display: flex;
    width: 100%;
    flex-direction: column;
    gap: calc(var(--spacing) * 2);
  }
  .menu-section {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 2);
  }
  .menu-title {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .menu-item {
    display: flex;
    cursor: pointer;
    flex-direction: row;
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-lg);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-base-content);
    --tw-duration: 150ms;
    transition-duration: 150ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    will-change: transform;
    -webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-base-300);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-300) 30%, transparent);
        }
      }
    }
    &:active {
      background-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-300) 30%, transparent);
      }
    }
  }
  .menu-item-disabled {
    pointer-events: none;
    cursor: not-allowed;
    color: var(--color-base-content);
  }
  .menu-item-no-animation {
    transition-property: none;
  }
  .menu-item.menu-active {
    background-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-base-300) 30%, transparent);
    }
    transition-property: none;
  }
  .menu-toggle {
    display: none;
  }
  .menu-item-collapse {
    transition: padding 0.15s, grid-template-rows 0.15s;
    display: grid;
    grid-template-rows: 0fr;
    overflow: hidden;
  }
  .menu-toggle:checked ~ .menu-item-collapse {
    grid-template-rows: 1fr;
    --tw-border-style: none;
    border-style: none;
  }
  .menu-item:focus-within ~ .menu-item-collapse {
    grid-template-rows: 1fr;
    --tw-border-style: none;
    border-style: none;
  }
  .menu-icon {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .menu-toggle:checked ~ .menu-item .menu-icon {
    rotate: 90deg;
  }
}
@layer base {
  .nav {
    margin-bottom: calc(var(--spacing) * 0);
    display: flex;
    list-style-type: none;
    flex-wrap: wrap;
    align-items: center;
    padding-left: calc(var(--spacing) * 0);
    -webkit-user-select: none;
    user-select: none;
  }
  .nav-link {
    display: block;
    padding-inline: 1rem;
    padding-block: 0.5rem;
    color: var(--color-base-content);
    text-decoration-line: none;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: .15s;
    transition-duration: .15s;
    -webkit-user-select: none;
    user-select: none;
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
    &:focus {
      color: var(--color-primary);
    }
    &:active {
      color: var(--color-primary);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .nav-pills .nav-link {
    border-radius: var(--radius-4xl);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
    &:focus {
      background-color: var(--color-primary);
    }
    &:focus {
      color: var(--color-white);
    }
    &:active {
      background-color: var(--color-primary);
    }
    &:active {
      color: var(--color-white);
    }
  }
  .navbar {
    margin-inline: auto;
    display: flex;
    height: calc(var(--spacing) * 16);
    max-width: var(--container-7xl);
    align-items: center;
    justify-content: space-between;
    padding-inline: calc(var(--spacing) * 4);
  }
  .navbar-brand {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-base-content);
  }
}
@layer base {
   .mockup-browser {
    position: relative;
    border-radius: var(--radius-2xl);
    overflow: auto hidden;
  }
  .mockup-browser pre[data-prefix]:before {
    display: inline-block;
    text-align: right;
    content: attr(data-prefix);
  }
  .mockup-browser .mockup-browser-toolbar {
    margin-block: .75rem;
    display: inline-flex;
    width: 100%;
    align-items: center;
    padding-right: 1.4rem;
  }
  .mockup-browser .mockup-browser-toolbar:where(:dir(rtl),[dir=rtl],[dir=rtl] *) {
    flex-direction: row-reverse;
  }
  .mockup-browser .mockup-browser-toolbar:before {
    margin-right: 4.8rem;
    display: inline-flex;
    aspect-ratio: 1;
    height: .75rem;
    opacity: .3;
    border-radius: 3.40282e38px;
    box-shadow: 1.4em 0,2.8em 0,4.2em 0;
    content: '';
  }
  .mockup-browser .mockup-browser-toolbar .input {
    margin-inline: auto;
    width: 50%;
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
@layer base {
   .mockup-code {
    position: relative;
    border-radius: var(--radius-md);
    background-color: black;
    padding-block: 1.25rem;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-white);
    overflow: auto hidden;
    direction: ltr;
  }
  .mockup-code:before  {
    margin-bottom: 1rem;
    display: block;
    height: .75rem;
    width: .75rem;
    opacity: .3;
    border-radius: 3.40282e38px;
    box-shadow: 1.4em 0,2.8em 0,4.2em 0;
    content: '';
  }
  .mockup-code pre {
    padding-right: 1.25rem;
  }
  .mockup-code pre:before {
    margin-right: 2ch;
    content: '';
  }
  .mockup-code pre[data-prefix]:before {
    display: inline-block;
    width: 2rem;
    text-align: right;
    opacity: .5;
    content: attr(data-prefix);
  }
}
@layer base {
  .divider:not(:empty) {
    gap: 1rem;
  }
  .divider {
    margin-top: 1rem;
    margin-bottom: 1rem;
    display: flex;
    height: 1rem;
    align-items: center;
    white-space: nowrap;
  }
  .divider-horizontal:after,.divider-horizontal:before,.divider:after,.divider:before {
    height: 1px;
    width: 100%;
    background-color: var(--color-base-200);
    content: var(--tw-content);
    --tw-content: '';
  }
  .divider-vertical {
    margin-inline: 1rem;
    margin-block: 0rem;
    height: 100%;
    width: 1rem;
    flex-direction: column;
  }
  .divider-vertical:after,.divider-vertical:before {
    height: 100%;
    width: 1px;
    background-color: var(--color-base-200);
    content: var(--tw-content);
    --tw-content: '';
  }
}
@layer base {
  .checkbox {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    appearance: none;
    border-radius: var(--radius-sm);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-200);
    outline-offset: 2px;
    outline-color: var(--color-base-300);
    &:checked {
      border-color: var(--color-neutral-950);
    }
    &:checked {
      background-color: var(--color-neutral-950);
    }
    &:focus {
      border-color: var(--color-base-300);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
      }
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:focus {
      outline-color: var(--color-base-content-100);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .checkbox[type=checkbox]:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
  }
  .checkbox-primary {
    &:checked {
      border-color: var(--color-primary);
    }
    &:checked {
      background-color: var(--color-primary);
    }
    &:focus {
      border-color: var(--color-primary);
    }
    &:focus {
      outline-color: var(--color-primary);
    }
  }
  .checkbox-secondary {
    &:checked {
      border-color: var(--color-secondary);
    }
    &:checked {
      background-color: var(--color-secondary);
    }
    &:focus {
      border-color: var(--color-secondary);
    }
    &:focus {
      outline-color: var(--color-secondary);
    }
  }
  .checkbox-success {
    &:checked {
      border-color: var(--color-success);
    }
    &:checked {
      background-color: var(--color-success);
    }
    &:focus {
      border-color: var(--color-success);
    }
    &:focus {
      outline-color: var(--color-success);
    }
  }
  .checkbox-danger {
    &:checked {
      border-color: var(--color-danger);
    }
    &:checked {
      background-color: var(--color-danger);
    }
    &:focus {
      border-color: var(--color-danger);
    }
    &:focus {
      outline-color: var(--color-danger);
    }
  }
  .checkbox-warning {
    &:checked {
      border-color: var(--color-warning);
    }
    &:checked {
      background-color: var(--color-warning);
    }
    &:focus {
      border-color: var(--color-warning);
    }
    &:focus {
      outline-color: var(--color-warning);
    }
  }
}
@layer base {
  .breadcrumbs {
    display: flex;
    gap: .5;
    overflow-x: auto;
    padding-inline: .75rem;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
  }
  .breadcrumbs>ul,.breadcrumbs>ul>li>a {
    display: flex;
    align-items: center;
  }
  .breadcrumbs>ul {
    white-space: nowrap;
  }
  .breadcrumbs>ul>li {
    display: flex;
    cursor: pointer;
    align-items: center;
  }
  .breadcrumbs>ul>:not(li:last-child)>a:hover {
    text-decoration-line: underline;
  }
  .breadcrumbs>ul>li+:before {
    margin-right: .75rem;
    margin-left: .5rem;
    display: block;
    opacity: 4%;
    content: var(--tw-content);
    --tw-content: '/';
  }
  .breadcrumbs-active,.breadcrumbs>ul>li:last-child {
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
  }
  .breadcrumbs>ul>li:last-child {
    cursor: auto;
  }
  .breadcrumbs>ul>li:first-child:hover {
    text-decoration-line: underline;
  }
}
@layer base {
  .form-group {
    display: flex;
    width: 100%;
    flex-direction: column;
    gap: calc(var(--spacing) * 3);
  }
  .form-field {
    display: flex;
    flex-direction: column;
    gap: calc(var(--spacing) * 1.5);
  }
  .form-label {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding-inline: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-base-content);
  }
  .form-label-alt {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
    color: var(--color-base-content);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
    }
  }
  .form-control {
    position: relative;
    display: flex;
    flex-direction: row;
    gap: calc(var(--spacing) * 1.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
}
@layer base {
  .input-file {
    cursor: pointer;
    color: var(--color-base-content);
    &::file-selector-button {
      margin-right: calc(var(--spacing) * 4);
    }
    &::file-selector-button {
      border-radius: calc(infinity * 1px);
    }
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
    &::file-selector-button {
      background-color: var(--color-base-content-100);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content-100) 10%, transparent);
      }
    }
    &::file-selector-button {
      padding-inline: calc(var(--spacing) * 4);
    }
    &::file-selector-button {
      padding-block: calc(var(--spacing) * 2);
    }
    &::file-selector-button {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
    &::file-selector-button {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    &::file-selector-button {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
    &::file-selector-button {
      color: var(--color-base-content);
    }
    &:hover {
      @media (hover: hover) {
        &::file-selector-button {
          background-color: var(--color-base-content-300);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-base-content-300) 10%, transparent);
          }
        }
      }
    }
  }
  .input-file-button {
    display: block;
    width: 100%;
    cursor: pointer;
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-200);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-base-content-300);
    &::file-selector-button {
      margin-inline-end: calc(var(--spacing) * 4);
    }
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
    &::file-selector-button {
      background-color: var(--color-base-content-100);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content-100) 10%, transparent);
      }
    }
    &::file-selector-button {
      padding-inline: calc(var(--spacing) * 4);
    }
    &::file-selector-button {
      padding-block: calc(var(--spacing) * 3);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      outline-color: var(--color-base-content-300);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
}
@layer base {
  .input {
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-100);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: 1.5em;
    line-height: 1.5em;
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
    color: var(--color-base-content);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-base-content);
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
    }
    &:focus {
      border-color: var(--color-base-content);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:focus {
      outline-color: var(--color-base-content);
    }
    &:active {
      border-color: var(--color-base-content);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .input-soft {
    border-radius: var(--radius-lg);
    background-color: var(--color-base-200);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: 1.5em;
    line-height: 1.5em;
    color: var(--color-base-content);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-base-content-300);
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      outline-color: var(--color-base-content-300);
    }
  }
  .input-primary {
    border-color: var(--color-primary);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
      }
    }
    &:focus {
      border-color: var(--color-primary);
    }
    &:focus {
      outline-color: var(--color-primary);
    }
    &:active {
      border-color: var(--color-primary);
    }
    &:active {
      outline-color: var(--color-primary);
    }
  }
  .input-secondary {
    border-color: var(--color-secondary);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-secondary);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-secondary);
      }
    }
    &:focus {
      border-color: var(--color-secondary);
    }
    &:focus {
      outline-color: var(--color-secondary);
    }
    &:active {
      border-color: var(--color-secondary);
    }
    &:active {
      outline-color: var(--color-secondary);
    }
  }
  .input-success {
    border-color: var(--color-success);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-success);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-success);
      }
    }
    &:focus {
      border-color: var(--color-success);
    }
    &:focus {
      outline-color: var(--color-success);
    }
    &:active {
      border-color: var(--color-success);
    }
    &:active {
      outline-color: var(--color-success);
    }
  }
  .input-warning {
    border-color: var(--color-warning);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-warning);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-warning);
      }
    }
    &:focus {
      border-color: var(--color-warning);
    }
    &:focus {
      outline-color: var(--color-warning);
    }
    &:active {
      border-color: var(--color-warning);
    }
    &:active {
      outline-color: var(--color-warning);
    }
  }
  .input-danger {
    border-color: var(--color-danger);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-danger);
    &:focus {
      border-color: var(--color-danger);
    }
    &:focus {
      outline-color: var(--color-danger);
    }
    &:active {
      border-color: var(--color-danger);
    }
    &:active {
      outline-color: var(--color-danger);
    }
  }
  .input-soft-primary {
    border-radius: var(--radius-lg);
    background-color: var(--color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
    }
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-primary);
    &::placeholder {
      color: var(--color-primary);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      outline-color: var(--color-primary);
    }
  }
  .input-soft-secondary {
    background-color: var(--color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
    }
    outline-color: var(--color-secondary);
    &::placeholder {
      color: var(--color-secondary);
    }
    &:active {
      outline-color: var(--color-secondary);
    }
  }
  .input-soft-success {
    background-color: var(--color-success);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
    }
    outline-color: var(--color-success);
    &::placeholder {
      color: var(--color-success);
    }
    &:active {
      outline-color: var(--color-success);
    }
  }
  .input-soft-danger {
    background-color: var(--color-danger);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger) 10%, transparent);
    }
    outline-color: var(--color-danger);
    &::placeholder {
      color: var(--color-danger);
    }
    &:active {
      outline-color: var(--color-danger);
    }
  }
  .input-soft-warning {
    background-color: var(--color-warning);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-warning) 10%, transparent);
    }
    outline-color: var(--color-warning);
    &::placeholder {
      color: var(--color-warning);
    }
    &:active {
      outline-color: var(--color-warning);
    }
  }
  .input-full {
    width: 100%;
  }
  .input-small {
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .input-large {
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 3);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .input-x-large {
    padding-inline: calc(var(--spacing) * 8);
    padding-block: calc(var(--spacing) * 4);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
}
@layer base {
  .radio {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: 50%;
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-base-300);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    }
    background-color: var(--color-base-200);
    outline-offset: 2px;
    outline-color: var(--color-neutral-950);
    &:checked {
      border-color: var(--color-neutral-950);
    }
    &:checked {
      background-color: var(--color-neutral-950);
    }
    &:focus {
      border-color: var(--color-neutral-950);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:focus {
      outline-color: var(--color-base-content-100);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .radio[type=radio]:checked {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
  }
  .radio-primary {
    &:checked {
      border-color: var(--color-primary);
    }
    &:checked {
      background-color: var(--color-primary);
    }
    &:focus {
      border-color: var(--color-primary);
    }
    &:focus {
      outline-color: var(--color-primary);
    }
  }
  .radio-secondary {
    &:checked {
      border-color: var(--color-secondary);
    }
    &:checked {
      background-color: var(--color-secondary);
    }
    &:focus {
      border-color: var(--color-secondary);
    }
    &:focus {
      outline-color: var(--color-secondary);
    }
  }
  .radio-success {
    &:checked {
      border-color: var(--color-success);
    }
    &:checked {
      background-color: var(--color-success);
    }
    &:focus {
      border-color: var(--color-success);
    }
    &:focus {
      outline-color: var(--color-success);
    }
  }
  .radio-danger {
    &:checked {
      border-color: var(--color-danger);
    }
    &:checked {
      background-color: var(--color-danger);
    }
    &:focus {
      border-color: var(--color-danger);
    }
    &:focus {
      outline-color: var(--color-danger);
    }
  }
  .radio-warning {
    &:checked {
      border-color: var(--color-warning);
    }
    &:checked {
      background-color: var(--color-warning);
    }
    &:focus {
      border-color: var(--color-warning);
    }
    &:focus {
      outline-color: var(--color-warning);
    }
  }
}
@layer base {
  .select {
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg class='select-icon' xmlns='http://www.w3.org/2000/svg' width='24' height='24' style='fill:%237e868c'%3E%3Cpath d='M16.293 9.293 12 13.586 7.707 9.293l-1.414 1.414L12 16.414l5.707-5.707z'/%3E%3C/svg%3E");
    background-position: right .5rem center;
    background-size: 1.5em 1.5em;
    width: 100%;
    max-width: var(--container-xs);
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    background-color: var(--color-base-100);
    background-repeat: no-repeat;
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-base-content);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-base-content);
    -webkit-user-select: none;
    user-select: none;
    &:focus {
      border-color: var(--color-base-content);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      border-color: var(--color-base-content);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .select-primary {
    border-color: var(--color-primary);
    outline-color: var(--color-primary);
    &:focus {
      border-color: var(--color-primary);
    }
    &:active {
      border-color: var(--color-primary);
    }
  }
  .select-secondary {
    border-color: var(--color-secondary);
    outline-color: var(--color-secondary);
    &:focus {
      border-color: var(--color-secondary);
    }
    &:active {
      border-color: var(--color-secondary);
    }
  }
  .select-success {
    border-color: var(--color-success);
    outline-color: var(--color-success);
    &:focus {
      border-color: var(--color-success);
    }
    &:active {
      border-color: var(--color-success);
    }
  }
  .select-danger {
    border-color: var(--color-danger);
    outline-color: var(--color-danger);
    &:focus {
      border-color: var(--color-danger);
    }
    &:active {
      border-color: var(--color-danger);
    }
  }
  .select-warning {
    border-color: var(--color-warning);
    outline-color: var(--color-warning);
    &:focus {
      border-color: var(--color-warning);
    }
    &:active {
      border-color: var(--color-warning);
    }
  }
  .select-small {
    padding-inline: calc(var(--spacing) * 3);
    padding-block: calc(var(--spacing) * 1);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .select-large {
    padding-inline: calc(var(--spacing) * 6);
    padding-block: calc(var(--spacing) * 3);
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .select-x-large {
    padding-inline: calc(var(--spacing) * 8);
    padding-block: calc(var(--spacing) * 4);
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .select-full {
    max-width: 100%;
  }
}
@layer base {
  .switch {
    position: relative;
    display: inline-block;
    height: calc(var(--spacing) * 6);
    width: calc(var(--spacing) * 11);
    cursor: pointer;
  }
  .switch-inner {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip-path: inset(50%);
    white-space: nowrap;
    border-width: 0;
  }
  .switch-track {
    position: absolute;
    inset: calc(var(--spacing) * 0);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-base-300);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: .2s;
    transition-duration: .2s;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-neutral-800);
    }
    &:is(:where(.peer):disabled ~ *) {
      pointer-events: none;
    }
    &:is(:where(.peer):disabled ~ *) {
      opacity: 50%;
    }
  }
  .switch-thumb {
    position: absolute;
    inset-inline-start: calc(var(--spacing) * 0.5);
    top: calc(1/2 * 100%);
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    border-radius: calc(infinity * 1px);
    background-color: var(--color-white);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: .2s;
    transition-duration: .2s;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .switch-track-primary {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-sky-400);
    }
  }
  .switch-thumb-primary {
    background-color: var(--color-white);
  }
  .switch-track-secondary {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-purple-600);
    }
  }
  .switch-thumb-secondary {
    background-color: var(--color-white);
  }
  .switch-track-success {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-green-400);
    }
  }
  .switch-thumb-success {
    background-color: var(--color-white);
  }
  .switch-track-danger {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-red-500);
    }
  }
  .switch-thumb-danger {
    background-color: var(--color-white);
  }
  .switch-track-warning {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-yellow-500);
    }
  }
  .switch-thumb-warning {
    background-color: var(--color-white);
  }
}
@layer base {
  .textarea {
    border-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--color-base-300) 47%, transparent);
    background-color: var(--color-base-100);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-base-content);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-base-content);
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
    }
    &:focus {
      border-color: var(--color-base-content);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      border-color: var(--color-base-content);
    }
    &:active {
      outline-color: var(--color-base-content);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 3);
    }
    @media (width >= 40rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .textarea-soft {
    border-radius: var(--radius-lg);
    background-color: var(--color-base-200);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-leading: 1.5em;
    line-height: 1.5em;
    color: var(--color-base-content);
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    outline-offset: 2px;
    outline-color: var(--color-base-content-300);
    &::placeholder {
      color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
      }
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      outline-color: var(--color-base-content-300);
    }
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 3);
    }
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .textarea-primary {
    border-color: var(--color-primary);
    outline-offset: 2px;
    outline-color: var(--color-primary);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
      }
    }
    &:focus {
      border-color: var(--color-primary);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      border-color: var(--color-primary);
    }
    &:active {
      outline-color: var(--color-primary);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .textarea-secondary {
    border-color: var(--color-secondary);
    outline-offset: 2px;
    outline-color: var(--color-secondary);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-secondary);
      }
    }
    &:focus {
      border-color: var(--color-secondary);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      border-color: var(--color-secondary);
    }
    &:active {
      outline-color: var(--color-secondary);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .textarea-success {
    border-color: var(--color-success);
    outline-offset: 2px;
    outline-color: var(--color-success);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-success);
      }
    }
    &:focus {
      border-color: var(--color-success);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      border-color: var(--color-success);
    }
    &:active {
      outline-color: var(--color-success);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .textarea-danger {
    border-color: var(--color-danger);
    outline-offset: 2px;
    outline-color: var(--color-danger);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-danger);
      }
    }
    &:focus {
      border-color: var(--color-danger);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      border-color: var(--color-danger);
    }
    &:active {
      outline-color: var(--color-danger);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .textarea-warning {
    border-color: var(--color-warning);
    outline-offset: 2px;
    outline-color: var(--color-warning);
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-warning);
      }
    }
    &:focus {
      border-color: var(--color-warning);
    }
    &:focus {
      outline-style: var(--tw-outline-style);
      outline-width: 2px;
    }
    &:active {
      border-color: var(--color-warning);
    }
    &:active {
      outline-color: var(--color-warning);
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
  }
  .textarea-full {
    width: 100%;
  }
}
@layer base {
  .range {
    height: 0.5rem;
    width: 100%;
    cursor: pointer;
    appearance: none;
    border-radius: var(--radius-lg);
    background-color: var(--color-base-200);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .range::-webkit-slider-thumb {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 4px;
    border-color: var(--color-base-content);
    background-color: var(--color-base-200);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .range::-moz-range-thumb {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 4px;
    border-color: var(--color-base-content);
    background-color: var(--color-base-200);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .range::-ms-thumb {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 4px;
    border-color: var(--color-base-content);
    background-color: var(--color-base-200);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .range.range-primary::-webkit-slider-thumb {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 4px;
    border-color: var(--color-primary);
    background-color: var(--color-white);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .range.range-secondary::-webkit-slider-thumb {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 4px;
    border-color: var(--color-secondary);
    background-color: var(--color-white);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .range.range-success::-webkit-slider-thumb {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 4px;
    border-color: var(--color-success);
    background-color: var(--color-white);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .range.range-danger::-webkit-slider-thumb {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 4px;
    border-color: var(--color-danger);
    background-color: var(--color-white);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
  .range.range-warning::-webkit-slider-thumb {
    height: calc(var(--spacing) * 4);
    width: calc(var(--spacing) * 4);
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    border-style: var(--tw-border-style);
    border-width: 4px;
    border-color: var(--color-warning);
    background-color: var(--color-white);
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      opacity: 50%;
    }
    &:disabled {
      -webkit-user-select: none;
      user-select: none;
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}
@property --tw-text-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-text-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-border-spacing-x {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-spacing-y {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: "";
      --tw-text-shadow-color: initial;
      --tw-text-shadow-alpha: 100%;
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
    }
  }
}
